{"config":{"lang":["ja"],"separator":"[\\s\\-\u3000\u3001\u3002\uff0c\uff0e]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Siv3D\u3067\u30aa\u30f3\u30e9\u30a4\u30f3\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u3092\u4f5c\u308d\u3046\uff01","text":"<p>Siv3D\u306e\u30a2\u30c9\u30aa\u30f3\u3068\u3057\u3066\u63d0\u4f9b\u3055\u308c\u3066\u3044\u308b\u3001Multiplayer_Photon\u3092\u7528\u3044\u3066\u30aa\u30f3\u30e9\u30a4\u30f3\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u3092\u4f5c\u308b\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u3059\u3002</p>"},{"location":"#\u6e96\u5099-1--photon-sdk-\u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9","title":"\u6e96\u5099 1 | Photon SDK \u306e\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9","text":"<p>\u958b\u767a\u74b0\u5883\u306b\u5fdc\u3058\u305f Photon Realtime SDK (7z \u5f62\u5f0f\u3067\u5727\u7e2e) \u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u307e\u3059\u3002OpenSiv3D v0.6.15 \u3067\u691c\u8a3c\u6e08\u307f\u306e SDK \u30d0\u30fc\u30b8\u30e7\u30f3\u306f <code>v5.0.11.0</code> \u3067\u3059\u3002</p> <p> Windowns\u306a\u3089REALTIME Windows\u3092\u9078\u629e\u3002</p> <p> SDK\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u306e\u6a2a\u306e\u30ea\u30f3\u30af\u3092\u30af\u30ea\u30c3\u30af\u3002</p> <p>\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f7z \u5f62\u5f0f\u306e\u30d5\u30a1\u30a4\u30eb\u3092\u5c55\u958b\u3057\u3001\u9069\u5f53\u306a\u5834\u6240\u306b\u914d\u7f6e\u3057\u307e\u3059\uff08\u3053\u308c\u4ee5\u964d\u306e\u624b\u9806\u3067\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9 / \u30e9\u30a4\u30d6\u30e9\u30ea\u30d1\u30b9\u3092\u3053\u306e\u30d5\u30a9\u30eb\u30c0\u30d1\u30b9\u306b\u5bfe\u3057\u3066\u8a2d\u5b9a\u3059\u308b\u305f\u3081\u3001\u3053\u308c\u4ee5\u964d\u306f\u79fb\u52d5\u3055\u305b\u306a\u3044\u3067\u304f\u3060\u3055\u3044\u3002\uff09</p> <p>7zip\u89e3\u51cd\u74b0\u5883\u304c\u306a\u3044\u65b9\u306f\u3053\u3061\u3089\u306e\u30bd\u30d5\u30c8\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9</p>"},{"location":"#\u6e96\u50992--\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6e96\u5099","title":"\u6e96\u50992 | \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6e96\u5099","text":"<ol> <li>\u901a\u5e38\u3069\u304a\u308a Siv3D \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u30d7\u30ed\u30b8\u30a7\u30af\u30c8 (v0.6.15) \u3092\u4f5c\u6210\u3057\u307e\u3059\u3002</li> <li>Siv3D SDK \u30d5\u30a9\u30eb\u30c0\u5185\u306e <code>addon/Multiplayer_Photon</code> \u30d5\u30a9\u30eb\u30c0\u304b\u3089 3 \u3064\u306e\u30d5\u30a1\u30a4\u30eb <code>Multiplayer_Photon.hpp</code>, <code>Multiplayer_Photon.cpp</code>, <code>PHOTON_APP_ID.SECRET</code> \u3092\u30b3\u30d4\u30fc\u3057\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e Main.cpp \u304c\u3042\u308b\u30d5\u30a9\u30eb\u30c0\u306b\u914d\u7f6e\u3057\u307e\u3059\u3002  </li> <li>Multiplayer_Photon \u30e9\u30a4\u30d6\u30e9\u30ea\u3092\u81ea\u5206\u306e\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3067\u4f7f\u3046\u305f\u3081\u306b\u3001\u30b3\u30d4\u30fc\u3057\u305f <code>Multiplayer_Photon.hpp</code> \u3068 <code>Multiplayer_Photon.cpp</code> \u3092\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8ffd\u52a0\u3057\u3001\u30d3\u30eb\u30c9\u5bfe\u8c61\u306b\u542b\u3080\u3088\u3046\u306b\u3057\u307e\u3059\uff08\u305f\u3060\u3057\u3001\u3053\u306e\u307e\u307e\u3067\u306f Photon SDK \u3078\u306e\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30fb\u30e9\u30a4\u30d6\u30e9\u30ea\u30d1\u30b9\u304c\u901a\u3063\u3066\u3044\u306a\u3044\u305f\u3081\u3001\u30d3\u30eb\u30c9\u306b\u306f\u5931\u6557\u3057\u307e\u3059\uff09</li> </ol> <ol> <li>(Windows \u306e\u5834\u5408) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3067\u3001\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u3068\u30e9\u30a4\u30d6\u30e9\u30ea\u30c7\u30a3\u30ec\u30af\u30c8\u30ea\u305d\u308c\u305e\u308c\u306b\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f Photon SDK \u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9 (\u4f8b: C:/Users/siv3d/Desktop/libs/Photon-Windows-Sdk_v5-0-3-0) \u3092\u8ffd\u52a0\u3057\u307e\u3059</li> <li>(macOS \u306e\u5834\u5408) \u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u8a2d\u5b9a\u3067\u3001\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3057\u305f Photon SDK \u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9\u3092 Build Settings \u306e Header Search Paths \u306b\u8ffd\u52a0\u3057\u3001Library Search Paths \u306b ???/Common-cpp/lib, ???/LoadBalancing-cpp/lib, ???/Photon-cpp/lib, ???/3rdparty/lib/apple \u306e 4 \u3064\u306e\u30d1\u30b9\u3092\u8ffd\u52a0 (??? \u306f Photon SDK \u30d5\u30a9\u30eb\u30c0\u306e\u30d1\u30b9) \u3057\u305f\u3046\u3048\u3067\u3001Build Phases \u306e Link Binary With Libraries \u306b\u3001\u305d\u308c\u3089\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u4e2d\u8eab\u306e\u3046\u3061 libCommon-cpp_release_macosx.a, libLoadBalancing-cpp_release_macosx.a, libPhoton-cpp_release_macosx.a, libcrypto_release_macosx.a \u306e 4 \u30d5\u30a1\u30a4\u30eb\u3092\u8ffd\u52a0\u3057\u307e\u3059</li> <li>\u3053\u308c\u3067\u30d3\u30eb\u30c9\u304c\u3067\u304d\u308c\u3070\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e\u6e96\u5099\u306f\u5b8c\u4e86\u3067\u3059</li> </ol> Siv3D SDK <p>Siv3D \u3092\u30a4\u30f3\u30b9\u30c8\u30fc\u30eb\u3057\u305f\u3068\u304d\u306b\u4f5c\u6210\u3055\u308c\u308b\u30d5\u30a9\u30eb\u30c0\u3067\u3059\u3002macOS \u306e\u5834\u5408\u305d\u308c\u81ea\u4f53\u3001Windows \u306e\u5834\u5408\u306f\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30d5\u30a9\u30eb\u30c0\u306b OpenSiv3D_0.6.* \u3068\u3044\u3046\u540d\u524d\u3067\u4f5c\u6210\u3055\u308c\u307e\u3059</p>"},{"location":"#\u6e96\u50993--photon-app-id-\u3092\u53d6\u5f97\u3057\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8a2d\u5b9a\u3059\u308b","title":"\u6e96\u50993 | Photon App ID \u3092\u53d6\u5f97\u3057\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306b\u8a2d\u5b9a\u3059\u308b","text":"<p>Photon Web \u30b5\u30a4\u30c8\u30ed\u30b0\u30a4\u30f3\u5f8c\u3001\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u753b\u9762\u3092\u958b\u304d\u307e\u3059\u3002</p> <p></p> <p>\u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u753b\u9762\u306e CREATE A NEW APP \u3092\u62bc\u3057\u3066\u60c5\u5831\u3092\u5165\u529b\u3057\u3001CREATE \u304b\u3089\u65b0\u3057\u3044 Photon App ID \u3092\u767a\u884c\u3057\u307e\u3059\u3002Photon Type \u306f Realtime \u3092\u9078\u629e\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5165\u529b\u9805\u76ee\u306f\u4efb\u610f\u3067\u3059\u3002</p> <p></p> <ul> <li>\u767a\u884c\u3055\u308c\u308b Photon App ID \u306f <code>\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\"</code> \u306e\u3088\u3046\u306a\u82f1\u6570\u5b57\u306e\u7f85\u5217\u3067\u3059\u3002</li> <li>\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306e PHOTON_APP_ID.SECRET \u306b\u66f8\u304b\u308c\u3066\u3044\u308b\u30c7\u30d5\u30a9\u30eb\u30c8\u306e App ID <code>\"00000000-0000-0000-0000-000000000000\"</code> \u3092\u3001\u767a\u884c\u3055\u308c\u305f Photon App ID \u3067\u4e0a\u66f8\u304d\u3057\u307e\u3059\u3002</li> <li>(\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u3092 git \u7ba1\u7406\u3057\u3066\u3044\u308b\u5834\u5408) \u3053\u306e Photon App ID \u306f\u7b2c\u4e09\u8005\u306b\u77e5\u3089\u308c\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002<code>.gitignore</code> \u3092\u7528\u3044\u3066\u3001<code>PHOTON_APP_ID.SECRET</code> \u3092\u7ba1\u7406\u5bfe\u8c61\u304b\u3089\u5916\u3059\u3088\u3046\u306b\u3057\u307e\u3057\u3087\u3046</li> </ul>"},{"location":"call_back/","title":"\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7de8\u96c6\u3059\u308b","text":"<p>\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3001\u90e8\u5c4b\u306b\u5165\u5ba4\u3001\u90e8\u5c4b\u304b\u3089\u9000\u51fa\u306a\u3069\u3001\u3042\u3089\u3086\u308b\u64cd\u4f5c\u3084\u30a4\u30d9\u30f3\u30c8\u306e\u7d50\u679c\u3092\u901a\u77e5\u3059\u308b\u305f\u3081\u306b\u547c\u3070\u308c\u308b\u95a2\u6570\u3092\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3068\u3044\u3044\u307e\u3059\u3002Multiplayer_Photon\u95a2\u6570\u3092\u7d99\u627f\u3057\u305f\u81ea\u4f5c\u30af\u30e9\u30b9<code>MyClient</code>\u306e\u306a\u304b\u3067\u3053\u308c\u3089\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067\u3001\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u7de8\u96c6\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p>"},{"location":"call_back/#\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u8fd4\u3059\u30b3\u30fc\u30eb\u30d0\u30c3\u30af","title":"\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u8fd4\u3059\u30b3\u30fc\u30eb\u30d0\u30c3\u30af","text":"<p>client.\u25cb\u25cb\u25cb()\u3068\u3044\u3046\u64cd\u4f5c\u306b\u5bfe\u3057\u3066\u25cb\u25cb\u25cbReturn()\u3092\u8fd4\u3059\u3002</p> <ul> <li> <p><code>void connectReturn(int32 errorCode, const String&amp; errorString, const String&amp; region, const String&amp; cluster);</code></p> </li> <li> <p><code>void disconnectReturn();</code></p> </li> <li> <p><code>void createRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString);</code></p> </li> <li> <p><code>void joinRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString);</code></p> </li> <li> <p><code>void leaveRoomReturn(int32 errorCode, const String&amp; errorString);</code></p> </li> <li> <p><code>void joinOrCreateRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString);</code></p> </li> <li> <p><code>void joinRandomRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString);</code></p> </li> <li> <p><code>void joinRandomOrCreateRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString);</code></p> </li> </ul>"},{"location":"call_back/#\u30eb\u30fc\u30e0\u3078\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u5165\u9000\u5ba4\u306b\u53cd\u5fdc\u3059\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af","title":"\u30eb\u30fc\u30e0\u3078\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u5165\u9000\u5ba4\u306b\u53cd\u5fdc\u3059\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af","text":"<ul> <li> <p><code>void joinRoomEventAction(const LocalPlayer&amp; newPlayer, const Array&lt;LocalPlayerID&gt;&amp; playerIDs, bool isSelf);</code></p> <p>\u81ea\u8eab\u304c\u30eb\u30fc\u30e0\u306b\u5165\u5ba4\u3057\u305f\u308a\u3001\u90e8\u5c4b\u306b\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u5165\u3063\u3066\u304d\u305f\u969b\u306b\u901a\u77e5\u3059\u308b\u3002<code>joinRoomReturn()</code>\u3068\u7d1b\u3089\u308f\u3057\u3044\u304c\u3001<code>joinRoomReturn()</code>\u306f\u3042\u304f\u307e\u3067\u81ea\u5206\u304c<code>.joinRoom()</code>\u3092\u884c\u3063\u305f\u6642\u306e\u307f\u8fd4\u3063\u3066\u304f\u308b\u3002</p> </li> <li> <p><code>void leaveRoomEventAction(LocalPlayerID playerID, bool isInactive);</code></p> <p>\u540c\u3058\u30eb\u30fc\u30e0\u306b\u3044\u308b\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u9000\u5ba4\u3057\u305f\u969b\u306b\u901a\u77e5\u3059\u308b\u3002<code>leaveRoomReturn()</code>\u306f\u3042\u304f\u307e\u3067\u81ea\u8eab\u304c<code>.leaveRoom()</code>\u3092\u3057\u305f\u3068\u304d\u306b\u8fd4\u3063\u3066\u304f\u308b\u3082\u306e\u306a\u306e\u3067\u3001\u5168\u304f\u306e\u5225\u7269\u3002</p> </li> </ul>"},{"location":"call_back/#\u30a4\u30d9\u30f3\u30c8\u53d7\u4fe1","title":"\u30a4\u30d9\u30f3\u30c8\u53d7\u4fe1","text":"<ul> <li><code>void customEventAction(LocalPlayerID playerID, uint8 eventCode, Deserializer&lt;MemoryViewReader&gt;&amp; reader);</code></li> </ul>"},{"location":"call_back/#\u305d\u306e\u4ed6","title":"\u305d\u306e\u4ed6","text":"<ul> <li> <p><code>void connectionErrorReturn(int32 errorCode);</code></p> <p>\u610f\u56f3\u7684\u3067\u306a\u304f\u5207\u65ad\u304c\u5207\u308c\u305f\u969b\u306b\u901a\u77e5\u3059\u308b\u3002 - <code>void onRoomListUpdate();</code></p> <p>\u30ed\u30d3\u30fc\u304b\u3089\u53d6\u5f97\u3067\u304d\u308b\u30eb\u30fc\u30e0\u30ea\u30b9\u30c8\u304c\u66f4\u65b0\u3055\u308c\u305f\u969b\u306b\u901a\u77e5\u3059\u308b\u3002 - <code>void onHostChange(LocalPlayerID newHostPlayerID, LocalPlayerID oldHostPlayerID);</code></p> <p>\u90e8\u5c4b\u306e\u30db\u30b9\u30c8\u304c\u5909\u308f\u3063\u305f\u969b\u306b\u901a\u77e5\u3059\u308b\u3002 - <code>void onRoomPropertiesChange(const HashTable&lt;String, String&gt;&amp; changes);</code></p> </li> <li> <p><code>void onPlayerPropertiesChange(LocalPlayerID playerID, const HashTable&lt;String, String&gt;&amp; changes);</code></p> </li> </ul>"},{"location":"call_back/#\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","title":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9","text":"<p>\u8a66\u3057\u306b\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306e\u30b5\u30f3\u30d7\u30eb\u306b\u5404\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3092\u8ffd\u52a0\u3057\u3066\u307f\u307e\u3059\u3002\u7de8\u96c6\u3057\u305f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u4ee5\u5916\u306ePrint\u3092\u6291\u3048\u308b\u305f\u3081\u306b<code>Verbose::No</code>\u3068\u3057\u3066\u3044\u307e\u3059\u3002</p> \u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n    MyClient()\n        :Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)),U\"1.0\",Verbose::No)\n    {}\nprivate:\n\n    void connectReturn(int32 errorCode, const String&amp; errorString, const String&amp; region, const String&amp; cluster) override{\n        if (errorCode)\n        {\n            Print &lt;&lt; U\"connectReturn error!!! \" &lt;&lt; errorString;\n        }\n        else\n        {\n            Print &lt;&lt; U\"connectReturn!!!\";\n        }\n    }\n\n    void disconnectReturn() override{\n        Print &lt;&lt; U\"disconnectReturn!!!\";\n    }\n\n    void createRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString) override{\n        if (errorCode)\n        {\n            Print &lt;&lt; U\"createRoomReturn error!!! \" &lt;&lt; errorString;\n        }\n        else\n        {\n            Print &lt;&lt; U\"createRoomReturn!!!\";\n        }\n    }\n\n    void joinRoomReturn(LocalPlayerID playerID, int32 errorCode, const String&amp; errorString) override{\n        if (errorCode)\n        {\n            Print &lt;&lt; U\"joinRoomReturn error!!! \" &lt;&lt; errorString;\n        }\n        else\n        {\n            Print &lt;&lt; U\"joinRoomReturn!!!\";\n        }\n    }\n\n    void leaveRoomReturn(int32 errorCode, const String&amp; errorString) override{\n        if (errorCode)\n        {\n            Print &lt;&lt; U\"leaveRoomReturn error!!! \" &lt;&lt; errorString;\n        }\n        else\n        {\n            Print &lt;&lt; U\"leaveRoomReturn!!!\";\n        }\n    }\n\n    void joinRoomEventAction(const LocalPlayer&amp; newPlayer, const Array&lt;LocalPlayerID&gt;&amp; playerIDs, bool isSelf) override{\n        Print &lt;&lt; U\"joinRoomEventAction!!!\";\n    }\n\n    void leaveRoomEventAction(LocalPlayerID playerID, bool isInactive) override{\n        Print &lt;&lt; U\"leaveRoomEventAction!!!\";\n    }\n\n    //sendEvent\u306b\u3088\u3063\u3066\u9001\u3089\u308c\u3066\u304d\u305f\u30a4\u30d9\u30f3\u30c8\u306b\u53cd\u5fdc\u3057\u547c\u3070\u308c\u308b\u3002\n    void customEventAction(const LocalPlayerID playerID, const uint8 eventCode, Deserializer&lt;MemoryViewReader&gt;&amp; reader) override\n    {\n        if (eventCode == 1)\n        {\n            String text;\n            reader(text);\n            Print &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; text;\n        }\n    }\n};\n\nvoid Main()\n{\n    Window::Resize(1280, 720);\n\n    MyClient client;\n\n    TextEditState playerName{ U\"siv3d-kun\" };\n\n    TextEditState sendText;\n\n    Font font(20);\n\n    while (System::Update())\n    {\n        if (client.isActive())\n        {\n            client.update();\n        }\n\n        ClientState state = client.getClientState();\n\n        Vec2 stateTextPos(1000, 5);\n\n        //\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f7\u3064\u306e\u72b6\u614b\u3092\u6301\u3064\n        switch (state)\n        {\n        case s3d::ClientState::Disconnected:\n            font(U\"Disconnected\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::ConnectingToLobby:\n            font(U\"ConnectingToLobby\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::InLobby:\n            Scene::Rect().draw(Palette::Steelblue);\n            font(U\"InLobby\").draw(stateTextPos);\n\n            //\u30ed\u30d3\u30fc\u5185\u306b\u5b58\u5728\u3059\u308b\u30eb\u30fc\u30e0\u3092\u5217\u6319\n            font(U\"Rooms\").draw(Vec2{ 650, 5 });\n            {\n                auto roomNameList = client.getRoomNameList();\n                double y = 0;\n                for (size_t i = 0; i &lt; roomNameList.size(); ++i)\n                {\n                    //\u30af\u30ea\u30c3\u30af\u3067\u5165\u5ba4\n                    if (SimpleGUI::Button(roomNameList[i], Vec2{ 650, (y += 40) }, 330, client.isInLobby()))\n                    {\n                        client.joinRoom(roomNameList[i]);\n                    }\n                }\n            }\n            break;\n        case s3d::ClientState::JoiningRoom:\n            font(U\"JoiningRoom\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::InRoom:\n            Scene::Rect().draw(Palette::Sienna);\n            font(U\"InRoom\").draw(stateTextPos);\n            font(U\"Room name : \", client.getCurrentRoomName()).draw(Arg::topRight(Scene::Width() - 20, Scene::Height() - 90));\n\n            SimpleGUI::TextBox(sendText, Vec2{ 20, Scene::Height()-50}, 1000, unspecified, client.isInRoom());\n\n            //\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u304b\u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u3092\u62bc\u3059\u3068\u6587\u5b57\u5217\u3092\u9001\u4fe1\n            if (SimpleGUI::Button(U\"&gt;&gt;&gt;\", Vec2{ 1040, Scene::Height() - 50 }, 160, client.isInRoom()) or sendText.enterKey)\n            {\n                //\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c91\u3067\u6587\u5b57\u5217\u3092\u9001\u4fe1\n                client.sendEvent(MultiplayerEvent(1), sendText.text);\n                Print &lt;&lt; U\"\u81ea\u5206\uff1a\" &lt;&lt; sendText.text;\n                sendText.clear();\n            }\n\n            break;\n        case s3d::ClientState::LeavingRoom:\n            font(U\"LeavingRoom\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::Disconnecting:\n            font(U\"Disconnecting\").draw(stateTextPos);\n            break;\n        default:\n            break;\n        }\n\n\n        //\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\n\n        double y = 0;\n        if (SimpleGUI::Button(U\"Disconnect\", Vec2(1000, y+=40), unspecified, client.isActive()))\n        {\n            client.disconnect();\n        }\n\n        SimpleGUI::TextBox(playerName, Vec2(1000, y += 40), 200, unspecified, state == ClientState::Disconnected);\n\n        if (SimpleGUI::Button(U\"Connect\", Vec2(1000, y+=40), unspecified, state == ClientState::Disconnected))\n        {\n            //\u540d\u524d\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u63a5\u7d9a\n            client.connect(playerName.text, U\"jp\");\n        }\n\n        if (SimpleGUI::Button(U\"Create Room\", Vec2{ 1000, (y += 40) }, 160, client.isInLobby()))\n        {\n            //\u90e8\u5c4b\u540d\u306f\u88ab\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u4ed8\u52a0\n            const RoomName roomName = (client.getUserName() + U\"'s room-\" + ToHex(RandomUint32()));\n\n            //\u30ed\u30d3\u30fc\u5185\u306b\u90e8\u5c4b\u3092\u4f5c\u6210\n            client.createRoom(roomName);\n        }\n\n        if (SimpleGUI::Button(U\"Leave Room\", Vec2{ 1000, (y += 40) }, 160, client.isInRoom()))\n        {\n            client.leaveRoom();\n        }\n\n        if (SimpleGUI::Button(U\"ClearPrint()\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            ClearPrint();\n        }\n        \n    }\n}\n</code></pre>"},{"location":"event_cache/","title":"\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5","text":"<p>\u9001\u4fe1\u3057\u305f\u30a4\u30d9\u30f3\u30c8\u306f\u901a\u5e38\u305d\u306e\u6642\u53c2\u52a0\u3057\u3066\u3044\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u307f\u53d7\u4fe1\u3057\u307e\u3059\u3002\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u4f7f\u7528\u3059\u308b\u3068\u3001\u9001\u4fe1\u3057\u305f\u3042\u3068\u306b\u9045\u308c\u3066\u53c2\u52a0\u3057\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u3082\u53d7\u4fe1\u3067\u304d\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u3059\u308b\u306b\u306f\u3001<code>MultiplayerEvent</code>\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u3001 - <code>EventReceiverOption::Others_CacheUntilLeaveRoom</code> - <code>EventReceiverOption::Others_CacheForever</code> - <code>EventReceiverOption::All_CacheUntilLeaveRoom</code> - <code>EventReceiverOption::All_CacheForever</code></p> <p>\u306e\u3044\u305a\u308c\u304b\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002</p>"},{"location":"event_cache/#\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u7a2e\u985e","title":"\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u7a2e\u985e","text":"<p>\u30ad\u30e3\u30c3\u30b7\u30e5\u306b\u306f<code>\u25cb\u25cb\u25cb_CacheUntilLeaveRoom</code>\u3068<code>\u25cb\u25cb\u25cb_CacheForever</code>\u306e\u4e8c\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002</p> <ul> <li><code>\u25cb\u25cb\u25cb_CacheUntilLeaveRoom</code>\u306f\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u9001\u4fe1\u3057\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u7d10\u3065\u3051\u3089\u308c\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u9001\u4fe1\u3057\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u90e8\u5c4b\u304b\u3089\u9000\u51fa\u3059\u308b\u3068\u3001\u3053\u306e\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3082\u6d88\u6ec5\u3057\u307e\u3059\u3002</li> <li><code>\u25cb\u25cb\u25cb_CacheForever</code>\u306f\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u30eb\u30fc\u30e0\u306b\u7d10\u3065\u3051\u3089\u308c\u307e\u3059\u3002\u305d\u306e\u305f\u3081\u3001\u9001\u4fe1\u3057\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u9000\u51fa\u3057\u3066\u3082\u6b8b\u308a\u7d9a\u3051\u307e\u3059\u3002</li> </ul>"},{"location":"event_cache/#\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u524a\u9664","title":"\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u306e\u524a\u9664","text":"<p><code>.removeEventCache(uint8 eventCode = 0)</code>\u3092\u7528\u3044\u3066\u30ad\u30e3\u30c3\u30b7\u30e5\u3055\u308c\u305f\u30a4\u30d9\u30f3\u30c8\u3092\u524a\u9664\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u306b\u306b\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u3067\u3001\u7279\u5b9a\u306e\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306e\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u524a\u9664\u3067\u304d\u307e\u3059\u3002\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306b0\u3092\u5165\u308c\u308b\u3068\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306b\u95a2\u308f\u3089\u305a\u524a\u9664\u3057\u307e\u3059\u3002</p> <p><code>.removeEventCache(uint8 eventCode, const Array&lt;LocalPlayerID&gt;&amp; targets)</code>\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u3067\u306f\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u304c\u7d10\u3065\u3044\u3066\u3044\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u306e<code>LocalPlayerID</code>\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002<code>targets</code>\u306b<code>{0}</code>\u3092\u6307\u5b9a\u3059\u308b\u3068\u30eb\u30fc\u30e0\u306b\u7d10\u3065\u3044\u305f\u30a4\u30d9\u30f3\u30c8\u30ad\u30e3\u30c3\u30b7\u30e5\u3092\u6307\u5b9a\u3057\u307e\u3059\u3002\uff08<code>\u25cb\u25cb\u25cb_CacheUntilLeaveRoom</code>\u3092\u7528\u3044\u308b\u3068\u9001\u4fe1\u3057\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u7d10\u3065\u304d\u3001<code>\u25cb\u25cb\u25cb_CacheForever</code>\u3092\u7528\u3044\u308b\u3068\u30eb\u30fc\u30e0\u306b\u7d10\u3065\u304d\u307e\u3059\u3002\uff09</p>"},{"location":"event_send_receive/","title":"\u30a4\u30d9\u30f3\u30c8\u306e\u9001\u53d7\u4fe1","text":"<p>\u540c\u3058\u30eb\u30fc\u30e0\u306b\u3044\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u306f\u4e92\u3044\u306b\u30a4\u30d9\u30f3\u30c8\u3068\u3057\u3066\u30c7\u30fc\u30bf\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u30d7\u30ec\u30a4\u30e4\u30fc\u540c\u58eb\u306e\u901a\u77e5\u3001\u30c7\u30fc\u30bf\u306e\u540c\u671f\u306f\u3053\u306e\u6a5f\u80fd\u3092\u4ecb\u3057\u3066\u884c\u308f\u308c\u308b\u305f\u3081\u3001\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u30b2\u30fc\u30e0\u306e\u4e2d\u6838\u3092\u62c5\u3046\u6a5f\u80fd\u3067\u3059\u3002</p>"},{"location":"event_send_receive/#\u30a4\u30d9\u30f3\u30c8\u306e\u9001\u4fe1","title":"\u30a4\u30d9\u30f3\u30c8\u306e\u9001\u4fe1","text":"<p><code>sendEvent(const MultiplayerEvent&amp; event, ...)</code>\u3092\u7528\u3044\u3066\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u4fe1\u3057\u307e\u3059\u3002\u7b2c\u4e00\u5f15\u6570\u306b<code>MultiplayerEvent</code>\u3001\u7b2c\u4e8c\u5f15\u6570\u4ee5\u964d\u306b\u9001\u4fe1\u3059\u308b\u30c7\u30fc\u30bf\u3092\u4efb\u610f\u306e\u500b\u6570\u9023\u306d\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p><code>MultiplayerEvent</code>\u306f\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u3068\u30a4\u30d9\u30f3\u30c8\u9001\u4fe1\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u6301\u3063\u305f\u578b\u3067\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u7b2c\u4e00\u5f15\u6570\u3067\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u3001\u7b2c\u4e8c\u5f15\u6570\u3067\u30bf\u30fc\u30b2\u30c3\u30c8\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f\u81ea\u5206\u4ee5\u5916\u3067\u3059\u3002</p> <p>\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306f1\u304b\u3089199\u307e\u3067\u306e\u6574\u6570\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>\u3044\u304f\u3064\u304b\u4f8b\u3092\u4e0a\u3052\u307e\u3059\u3002</p> <ul> <li> <p>\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9 1 \u3067\u3001\u3053\u3093\u306b\u3061\u306f\u3002\u3068\u9001\u4fe1 <pre><code>client.sendEvent(MultiplayerEvent(1),\u3000String(U\"\u3053\u3093\u306b\u3061\u306f\u3002\"));\n</code></pre></p> </li> <li> <p>\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9 2 \u3067\u3001Vec2\u578b, int\u578b, double\u578b\u306e\u30c7\u30fc\u30bf\u3092\u9001\u4fe1 <pre><code>client.sendEvent(MultiplayerEvent(2), Cursor::PosF(), 12, 3.4);\n</code></pre></p> </li> <li> <p>\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9 3 \u3067\u3001\u81ea\u5206\u542b\u3081\u305f\u5168\u3066\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306b 3.14 \u3092\u9001\u4fe1 <pre><code>client.sendEvent(MultiplayerEvent(3, EventReceiverOption::All), 3.14);\n</code></pre></p> </li> <li> <p>\u30bf\u30fc\u30b2\u30c3\u30c8\u306e<code>LocalPlayerID</code>\u3092\u6307\u5b9a\u3057\u3066\u9001\u4fe1\u3002\u3053\u306e\u4f8b\u3067\u306f<code>LocalPlayerID</code>\u304c\uff12\u3068\uff13\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53d7\u4fe1\u3059\u308b\u3002 <pre><code>client.sendEvent(MultiplayerEvent(4, Array&lt;LocalPlayerID&gt;{2, 3}), Circle(10,10,10), RectF(10,10,20,30));\n</code></pre></p> </li> <li> <p>\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306e\u307f\u3092\u9001\u4fe1\u3057\u3066\u3082\u3088\u3044\u3002 <pre><code>client.sendEvent(MultiplayerEvent(5));\n</code></pre></p> </li> </ul>"},{"location":"event_send_receive/#\u9001\u4fe1\u53ef\u80fd\u306a\u578b","title":"\u9001\u4fe1\u53ef\u80fd\u306a\u578b","text":"<p><code>sendEvent()</code>\u306f\u5185\u90e8\u3067<code>Serializer&lt;MemoryWriter&gt;{}</code>\u3092\u4f7f\u7528\u3057\u3066\u3044\u307e\u3059\u3002\u3064\u307e\u308a\u3001Siv3D\u3067\u898f\u5b9a\u3055\u308c\u305f\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u53ef\u80fd\u306a\u578b\u306f\u5168\u3066\u9001\u4fe1\u53ef\u80fd\u3067\u3059\u3002\u307e\u305f\u3001\u72ec\u81ea\u306b\u4f5c\u3063\u305f\u578b\u3082\u3001\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\u3053\u3068\u3067\u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u5bfe\u5fdc\u3057\u3001\u9001\u4fe1\u53ef\u80fd\u306a\u578b\u306b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 <pre><code>// \u30e6\u30fc\u30b6\u5b9a\u7fa9\u578b\nstruct MyData\n{\n\tString word;\n\n\tPoint pos;\n\n\t// \u30b7\u30ea\u30a2\u30e9\u30a4\u30ba\u306b\u5bfe\u5fdc\u3055\u305b\u308b\u305f\u3081\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u5b9a\u7fa9\u3059\u308b\n\ttemplate &lt;class Archive&gt;\n\tvoid SIV3D_SERIALIZE(Archive&amp; archive)\n\t{\n\t\tarchive(word, pos);\n\t}\n};\n</code></pre></p>"},{"location":"event_send_receive/#\u30a4\u30d9\u30f3\u30c8\u306e\u53d7\u4fe1","title":"\u30a4\u30d9\u30f3\u30c8\u306e\u53d7\u4fe1","text":"<p>\u30a4\u30d9\u30f3\u30c8\u306f\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u3067\u3042\u308b\u3001</p> <p><code>void customEventAction(LocalPlayerID playerID, uint8 eventCode, Deserializer&lt;MemoryViewReader&gt;&amp; reader);</code></p> <p>\u3092\u30aa\u30fc\u30d0\u30fc\u30e9\u30a4\u30c9\u3059\u308b\u3053\u3068\u3067\u53d7\u53d6\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>\u4f8b\u3048\u3070\u3001\u5148\u307b\u3069\u306e<code>sendEvent()</code>\u306e\u4f8b\u306b\u5168\u3066\u5bfe\u5fdc\u3059\u308b\u306a\u3089\u3001</p> <p><pre><code>class MyClient : public Multiplayer_Photon\n{\npublic:\n\tMyClient()\n\t\t:Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)),U\"1.0\",Verbose::Yes)\n\t{}\nprivate:\n\n    //sendEvent\u306b\u3088\u3063\u3066\u9001\u3089\u308c\u3066\u304d\u305f\u30a4\u30d9\u30f3\u30c8\u306b\u53cd\u5fdc\u3057\u547c\u3070\u308c\u308b\u3002\n    void customEventAction(const LocalPlayerID playerID, const uint8 eventCode, Deserializer&lt;MemoryViewReader&gt;&amp; reader) override\n    {\n       if (eventCode == 1)\n        {\n            String text;\n            reader(text);\n            Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c91\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; text;\n        }\n\n        if (eventCode == 2)\n        {\n            Vec2 v;\n            int32 n;\n            double d;\n            reader(v, n, d);\n            Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c92\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; v &lt;&lt; U\",\" &lt;&lt; n &lt;&lt; U\",\" &lt;&lt; d;\n        }\n\n        if (eventCode == 3)\n        {\n            double d;\n            reader(d);\n            Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c93\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; d;\n        }\n\n        if (eventCode == 4)\n        {\n            Circle circle;\n            RectF rect;\n            reader(circle, rect);\n            Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c94\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; circle &lt;&lt; U\",\" &lt;&lt; rect;\n        }\n\n        if (eventCode == 5)\n        {\n            Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c95\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID);\n        }\n    }\n}\n</code></pre> \u306e\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002</p>"},{"location":"event_send_receive/#registereventcallback","title":"RegisterEventCallback","text":"<p>customEventAction()\u306e\u30aa\u30fc\u30d0\u30fc\u30ed\u30fc\u30c9\u306b\u3088\u308b\u53d7\u4fe1\u306f\u3001\u5168\u3066\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u4e00\u3064\u306e\u95a2\u6570\u3092\u547c\u3076\u305f\u3081\u3001customEventAction()\u304c\u80a5\u5927\u5316\u3057\u3066\u3057\u307e\u3046\u554f\u984c\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u3053\u3067\u3001\u72ec\u81ea\u306e\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u767b\u9332\u3057\u3001\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306b\u5fdc\u3058\u3066\u5225\u306e\u95a2\u6570\u304c\u547c\u3070\u308c\u308b\u3088\u3046\u306b\u3067\u304d\u308b\u4ed5\u7d44\u307f\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002</p> <p>\u5f15\u6570\u306b<code>LocalPlayerID</code>\u3068\u9001\u4fe1\u3057\u305f\u578b\u3092\u9023\u306d\u305f\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u72ec\u81ea\u5b9a\u7fa9\u3057\u3001<code>RegisterEventCallback()</code>\u306b\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u3068\u95a2\u6570\u30dd\u30a4\u30f3\u30bf\u3092\u4e0e\u3048\u3001\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306a\u3069\u3067\u306f\u3058\u3081\u306b\u767b\u9332\u3057\u3066\u304a\u304d\u307e\u3059\u3002\u3053\u308c\u306b\u3088\u308a\u3001<code>RegisterEventCallback()</code>\u306b\u3088\u3063\u3066\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u304c\u767b\u9332\u3055\u308c\u3066\u3044\u308b\u30a4\u30d9\u30f3\u30c8\u306f\u3001\u5bfe\u5fdc\u3057\u305f\u30e1\u30f3\u30d0\u95a2\u6570\u3092\u547c\u3073\u51fa\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u767b\u9332\u3055\u308c\u3066\u3044\u306a\u3044\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306e\u30a4\u30d9\u30f3\u30c8\u304c\u9001\u3089\u308c\u3066\u304d\u305f\u5834\u5408\u306f\u901a\u5e38\u901a\u308a<code>customEventAction()</code>\u304c\u53cd\u5fdc\u3057\u307e\u3059\u3002</p> <p><code>RegisterEventCallback()</code>\u3092\u7528\u3044\u3066\u5148\u307b\u3069\u306e\u30a4\u30d9\u30f3\u30c8\u53d7\u4fe1\u30b3\u30fc\u30c9\u3092\u66f8\u304d\u63db\u3048\u308b\u3068\u3001</p> <pre><code>class MyClient : public Multiplayer_Photon\n{\npublic:\n\tMyClient()\n\t\t: Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)), U\"1.0\", Verbose::No)\n\t{\n\t\tRegisterEventCallback(1, &amp;MyClient::eventReceived_1);\n\t\tRegisterEventCallback(2, &amp;MyClient::eventReceived_2);\n\t\tRegisterEventCallback(3, &amp;MyClient::eventReceived_3);\n\t\tRegisterEventCallback(4, &amp;MyClient::eventReceived_4);\n\t\tRegisterEventCallback(5, &amp;MyClient::eventReceived_5);\n\t}\n\nprivate:\n\n\tvoid eventReceived_1(LocalPlayerID playerID, const String&amp; text) {\n\t\tPrint &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c91\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; text;\n\t}\n\n\tvoid eventReceived_2(LocalPlayerID playerID, const Vec2&amp; v, int32 n, double d) {\n\t\tPrint &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c92\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; v &lt;&lt; U\",\" &lt;&lt; n &lt;&lt; U\",\" &lt;&lt; d;\n\t}\n\n\tvoid eventReceived_3(LocalPlayerID playerID, double d) {\n\t\tPrint &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c93\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; d;\n\t}\n\n\tvoid eventReceived_4(LocalPlayerID playerID, const Circle&amp; circle, const RectF&amp; rect) {\n\t\tPrint &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c94\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; circle &lt;&lt; U\",\" &lt;&lt; rect;\n\t}\n\n\tvoid eventReceived_5(LocalPlayerID playerID) {\n\t\tPrint &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c95\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID);\n\t}\n};\n</code></pre> <p>\u3068\u306a\u308a\u307e\u3059\u3002</p> \u5b9f\u969b\u306b\u52d5\u304b\u305b\u308b\u30b5\u30f3\u30d7\u30eb <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n    MyClient()\n        : Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)), U\"1.0\", Verbose::No)\n    {\n        RegisterEventCallback(1, &amp;MyClient::eventReceived_1);\n        RegisterEventCallback(2, &amp;MyClient::eventReceived_2);\n        RegisterEventCallback(3, &amp;MyClient::eventReceived_3);\n        RegisterEventCallback(4, &amp;MyClient::eventReceived_4);\n        RegisterEventCallback(5, &amp;MyClient::eventReceived_5);\n    }\n\nprivate:\n\n    void eventReceived_1(LocalPlayerID playerID, const String&amp; text) {\n        Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c91\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; text;\n    }\n\n    void eventReceived_2(LocalPlayerID playerID, const Vec2&amp; v, int32 n, double d) {\n        Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c92\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; v &lt;&lt; U\",\" &lt;&lt; n &lt;&lt; U\",\" &lt;&lt; d;\n    }\n\n    void eventReceived_3(LocalPlayerID playerID, double d) {\n        Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c93\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; d;\n    }\n\n    void eventReceived_4(LocalPlayerID playerID, const Circle&amp; circle, const RectF&amp; rect) {\n        Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c94\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; circle &lt;&lt; U\",\" &lt;&lt; rect;\n    }\n\n    void eventReceived_5(LocalPlayerID playerID) {\n        Print &lt;&lt; U\"\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c95\u3092\u53d7\u4fe1\uff1a\" &lt;&lt; getUserName(playerID);\n    }\n};\n\nvoid Main()\n{\n    Window::Resize(1280, 720);\n\n    MyClient client;\n\n    while (System::Update())\n    {\n        if (client.isActive())\n        {\n            client.update();\n        }\n        else {\n            client.connect(U\"player\", U\"jp\");\n        }\n\n        if (client.isInLobby())\n        {\n            client.joinRandomOrCreateRoom(U\"room\");\n        }\n\n        if (client.isInRoom())\n        {\n            Scene::Rect().draw(Palette::Sienna);\n        }\n\n\n        //\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\n\n        double y = 0;\n\n        if(SimpleGUI::Button(U\"sendEvent 1\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            client.sendEvent(MultiplayerEvent(1), String(U\"\u3053\u3093\u306b\u3061\u306f\u3002\"));\n        }\n\n        if (SimpleGUI::Button(U\"sendEvent 2\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            client.sendEvent(MultiplayerEvent(2), Cursor::PosF(), 12, 3.4);\n        }\n\n        if (SimpleGUI::Button(U\"sendEvent 3\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            client.sendEvent(MultiplayerEvent(3, EventReceiverOption::All), 3.14);\n        }\n\n        if (SimpleGUI::Button(U\"sendEvent 4\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            client.sendEvent(MultiplayerEvent(4, Array&lt;LocalPlayerID&gt;{2, 3}), Circle(10, 10, 10), RectF(10, 10, 20, 30));\n        }\n\n        if (SimpleGUI::Button(U\"sendEvent 5\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            client.sendEvent(MultiplayerEvent(5));\n        }\n\n        if (SimpleGUI::Button(U\"ClearPrint()\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            ClearPrint();\n        }\n        \n    }\n}\n</code></pre>"},{"location":"foundation/","title":"\u57fa\u790e\u306e\u30d7\u30ed\u30b0\u30e9\u30e0","text":""},{"location":"foundation/#\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210","title":"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u4f5c\u6210","text":"<p>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3068\u306f\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u901a\u4fe1\u3092\u884c\u3046\u305f\u3081\u306e\u3082\u306e\u3067\u3059\u3002\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u901a\u4fe1\u306f\u3059\u3079\u3066\u3053\u306e\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u3092\u4ecb\u3057\u3066\u884c\u308f\u308c\u307e\u3059\u3002</p>"},{"location":"foundation/#\u30a4\u30f3\u30af\u30eb\u30fc\u30c9","title":"\u30a4\u30f3\u30af\u30eb\u30fc\u30c9","text":"<p> \u306b\u7d9a\u3044\u3066\u3001\"Multiplayer_Photon.hpp\" \u3068 \"PHOTON_APP_ID.SECRET\" \u3092\u30a4\u30f3\u30af\u30eb\u30fc\u30c9\u3057\u307e\u3059\u3002"},{"location":"foundation/#multiplayer_photon-\u306e\u7d99\u627f","title":"Multiplayer_Photon \u306e\u7d99\u627f","text":"<p><code>Multiplayer_Photon</code> \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9 <code>MyClient</code>\uff08\u540d\u524d\u306f\u4efb\u610f\uff09\u3092\u4f5c\u6210\u3057\u3001<code>using Multiplayer_Photon::Multiplayer_Photon;</code> \u3067 <code>Multiplayer_Photon</code> \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3082\u7d99\u627f\u3057\u307e\u3059\u3002</p>"},{"location":"foundation/#photon-app-id-\u306e\u683c\u7d0d","title":"Photon App ID \u306e\u683c\u7d0d","text":"<p><code>const std::string secretAppID{ SIV3D_OBFUSCATE(PHOTON_APP_ID) };</code> \u3068\u3059\u308b\u3053\u3068\u3067\u3001\u5b9f\u884c\u6642\u306b Photon App ID \u304c <code>secretAppID</code> \u306b\u683c\u7d0d\u3055\u308c\u307e\u3059\u3002\u76f4\u63a5 <code>const std::string secretAppID{ PHOTON_APP_ID };</code> \u3068\u3059\u308b\u3068\u3001\u30d3\u30eb\u30c9\u3057\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306e\u30d0\u30a4\u30ca\u30ea\u3092\u89e3\u6790\u3057\u305f\u969b\u306b\u3001Photon App ID \u304c\u305d\u306e\u307e\u307e\u8868\u308c\u3066\u3057\u307e\u3044\u307e\u3059\u304c\u3001<code>SIV3D_OBFUSCATE()</code> \u3067\u5305\u3080\u3053\u3068\u3067\u3001\u591a\u5c11\u306e\u96e3\u8aad\u5316\u304c\u65bd\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"foundation/#myclient-\u306e\u4f5c\u6210","title":"MyClient \u306e\u4f5c\u6210","text":"<p>MyClient \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306b\u306f Photon App ID, \u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u3001\u8a73\u7d30\u306a\u30c7\u30d0\u30c3\u30b0\u8868\u793a\u306e\u6709\u7121\u3001\u306e 3 \u3064\u306e\u30d1\u30e9\u30e1\u30fc\u30bf\u3092\u6e21\u3057\u307e\u3059\u3002 Photon App ID \u304c\u540c\u3058\u3067\u3082\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u304c\u7570\u306a\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\u901a\u4fe1\u304c\u3067\u304d\u307e\u305b\u3093\u3002\u30b2\u30fc\u30e0\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u30a2\u30c3\u30d7\u5f8c\u306b\u3001\u65b0\u65e7\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\u540c\u58eb\u3067\u901a\u4fe1\u3057\u3066\u3057\u307e\u3046\u3053\u3068\u3092\u9632\u3050\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002 \u8a73\u7d30\u306a\u30c7\u30d0\u30c3\u30b0\u8868\u793a\u3092\u6709\u52b9 (<code>Verbose::Yes</code>) \u306b\u3059\u308b\u3068\u3001Multiplayer_Photon \u306e\u5404\u7a2e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u95a2\u6570\u304c\u547c\u3070\u308c\u305f\u969b\u306b\u3001\u8a73\u7d30\u306a\u60c5\u5831\u3092 Print \u7d4c\u7531\u3067\u51fa\u529b\u3059\u308b\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u958b\u767a\u4e2d\u306f\u6709\u52b9\u306b\u3057\u3066\u304a\u304f\u3068\u30c7\u30d0\u30c3\u30b0\u306b\u4fbf\u5229\u3067\u3059\u3002\u30ea\u30ea\u30fc\u30b9\u6642\u306b\u306f Verbose::No \u3092\u9078\u629e\u3059\u308b\u3068\u3001\u4e00\u5207 Print \u3057\u306a\u304f\u306a\u308a\u307e\u3059\u3002 <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\n// Multiplayer_Photon \u3092\u7d99\u627f\u3057\u305f\u30af\u30e9\u30b9\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n\n\t// Multiplayer_Photon \u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3092\u7d99\u627f\n\tusing Multiplayer_Photon::Multiplayer_Photon;\n};\n\nvoid Main()\n{\n\t// \u30a6\u30a3\u30f3\u30c9\u30a6\u3092\u30001280x720 \u306b\u30ea\u30b5\u30a4\u30ba\n\tWindow::Resize(1280, 720);\n\n\t// Photon App ID\n\t// \u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\u306b App ID \u304c\u76f4\u63a5\u57cb\u3081\u8fbc\u307e\u308c\u306a\u3044\u3088\u3046\u3001SIV3D_OBFUSCATE() \u3067\u30e9\u30c3\u30d7\n\tconst std::string secretAppID{ SIV3D_OBFUSCATE(PHOTON_APP_ID) };\n\n\t// \u30b5\u30fc\u30d0\u30fc\u3068\u901a\u4fe1\u3059\u308b\u305f\u3081\u306e\u30af\u30e9\u30b9\n\t// - Photon App ID\n\t// - \u4eca\u56de\u4f5c\u3063\u305f\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u306e\u30d0\u30fc\u30b8\u30e7\u30f3\uff08\u3053\u308c\u304c\u7570\u306a\u308b\u30d7\u30ed\u30b0\u30e9\u30e0\u3068\u306f\u901a\u4fe1\u3067\u304d\u306a\u3044\uff09\n\t// - Print \u306b\u3088\u308b\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u306e\u6709\u7121\n\tMyClient client{ secretAppID, U\"1.0\", Verbose::Yes };\n\n\twhile (System::Update())\n\t{\n        \n\t}\n}\n</code></pre></p> <p>\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u306e\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u306e\u3088\u3046\u306b\u3001\u81ea\u4f5c\u30af\u30e9\u30b9\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u5404\u5f15\u304d\u6570\u3092\u6e21\u3057\u3066\u3082\u3088\u3044\u3002 <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n\tMyClient()\n\t\t:Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)),U\"1.0\",Verbose::Yes)\n\t{}\n};\n\nvoid Main()\n{\n\tWindow::Resize(1280, 720);\n\n\tMyClient client;\n\n\twhile (System::Update())\n\t{\n        \n\t}\n}\n</code></pre></p>"},{"location":"foundation/#\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u5148\u3092\u5909\u66f4","title":"\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u5148\u3092\u5909\u66f4","text":"<p><code>Multiplayer_Photon</code>\u306e\u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306e\u7b2c3\u5f15\u6570\u306b<code>Verbose</code>\u306e\u4ee3\u308f\u308a\u306b<code>Console</code>\u306a\u3069\u306e\u6587\u5b57\u5217\u3092\u53d7\u53d6\u308b\u95a2\u6570\u3001\u95a2\u6570\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3092\u4e0e\u3048\u308b\u3068\u3001\u30c7\u30d0\u30c3\u30b0\u51fa\u529b\u306e\u51fa\u529b\u5148\u3092\u5909\u66f4\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002(\u30c7\u30d5\u30a9\u30eb\u30c8\u3067\u306f<code>Print</code>)\u3000\u3053\u306e\u5834\u5408\u3001\u7b2c4\u5f15\u6570\u3067<code>Verbose</code>\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002 <pre><code>class MyClient : public Multiplayer_Photon\n{\npublic:\n\t//\u30c7\u30d0\u30c3\u30b0\u60c5\u5831\u3092Console\u51fa\u529b\n\tMyClient()\n\t\t:Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)),U\"1.0\",Console)\n\t{}\n};\n</code></pre></p>"},{"location":"foundation/#\u63a5\u7d9a\u7dad\u6301\u5207\u65ad","title":"\u63a5\u7d9a\u30fb\u7dad\u6301\u30fb\u5207\u65ad","text":""},{"location":"foundation/#\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b","title":"\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b","text":"<p><code>MyClient</code> \u306e <code>.connect()</code> \u3067\u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3057\u307e\u3059\u3002\u5f15\u6570\u3068\u3057\u3066\u81ea\u8eab\u306e\u540d\u524d\uff08\u30e6\u30fc\u30b6\u540d\uff09\u3092\u8a2d\u5b9a\u3057\u307e\u3059\u3002\u3053\u306e\u3042\u3068\u3001\u30e6\u30fc\u30b6\u540d\u306b\u30e9\u30f3\u30c0\u30e0\u306a\u6570\u5b57\u3092\u3064\u306a\u3052\u305f\u6587\u5b57\u5217\u304c\u30e6\u30fc\u30b6 ID \u3068\u3057\u3066\u81ea\u52d5\u7684\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u7b2c\u4e8c\u5f15\u6570\u306b<code>U\"jp\"</code>\u306a\u3069\u306e\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6e21\u3059\u3053\u3068\u3067\u30b5\u30fc\u30d0\u30fc\u3092\u6307\u5b9a\u3067\u304d\u307e\u3059\u3002\u306a\u3044\u5834\u5408\u306f\u5229\u7528\u53ef\u80fd\u306a\u3082\u306e\u306e\u3046\u3061\u6700\u3082\u901f\u3044\u3082\u306e\u304c\u9078\u3070\u308c\u307e\u3059\u3002</p>"},{"location":"foundation/#\u30b5\u30fc\u30d0\u30fc\u3068\u540c\u671f\u3059\u308b","title":"\u30b5\u30fc\u30d0\u30fc\u3068\u540c\u671f\u3059\u308b","text":"<p><code>.connect()</code> \u3059\u308b\u3068 <code>.isActive()</code> \u304c <code>true</code> \u3092\u8fd4\u3059\u3088\u3046\u306b\u306a\u308a\u307e\u3059\u3002\u3053\u306e\u9593\u306f 60FPS \u306e\u983b\u5ea6\u3067 <code>.update()</code> \u3092\u547c\u3073\u3001\u30b5\u30fc\u30d0\u3068\u540c\u671f\u3092\u3068\u308a\u7d9a\u3051\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<code>.update()</code> \u304c\u6570\u79d2\u4ee5\u4e0a\u547c\u3070\u308c\u306a\u3044\u3068\u3001\u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\u3055\u308c\u308b\u5834\u5408\u304c\u3042\u308a\u307e\u3059\u3002\u30b5\u30fc\u30d0\u3068\u63a5\u7d9a\u3057\u3066\u3044\u306a\u3044\u6642\u306b <code>.update()</code> \u3092\u547c\u3093\u3067\u3082\u4f55\u3082\u8d77\u3053\u308a\u307e\u305b\u3093\u3002 \u3053\u306e\u5148\u306e\u30c1\u30e5\u30fc\u30c8\u30ea\u30a2\u30eb\u3067\u767b\u5834\u3059\u308b\u300c\uff5e\u3059\u308b\u3068\u547c\u3070\u308c\u308b\u95a2\u6570\u300d\u306f\u3001\u57fa\u672c\u7684\u306b <code>.update()</code> \u306e\u30bf\u30a4\u30df\u30f3\u30b0\u3067\u547c\u3070\u308c\u307e\u3059\u3002</p>"},{"location":"foundation/#\u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\u3059\u308b","title":"\u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\u3059\u308b","text":"<p><code>MyClient</code> \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b\u30b5\u30fc\u30d0\u304b\u3089\u5207\u65ad\u3059\u308b\u305f\u3081\u3001\u660e\u793a\u7684\u306a <code>.disconnect()</code> \u306f\u4e0d\u8981\u3067\u3059\u3002</p> <pre><code># include &lt;Siv3D.hpp&gt; // OpenSiv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n\tMyClient()\n\t\t:Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)),U\"1.0\",Verbose::Yes)\n\t{}\n};\n\nvoid Main()\n{\n\tWindow::Resize(1280, 720);\n\tMyClient client;\n\n\twhile (System::Update())\n\t{\n\t\t// \u30b5\u30fc\u30d0\u30fc\u3068\u63a5\u7d9a\u3057\u3066\u3044\u308b\u5834\u5408\u3001\u30b5\u30fc\u30d0\u30fc\u3068\u540c\u671f\u3059\u308b\n\t\tclient.update();\n\n\t\t// \u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\u30dc\u30bf\u30f3\n\t\tif (SimpleGUI::Button(U\"Connect\", Vec2{ 1000, 20 }, 160, (not client.isActive())))\n\t\t{\n\t\t\t// \u30e6\u30fc\u30b6\u540d\n\t\t\tconst String userName = U\"siv3d-kun\";\n\n\t\t\t// \u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3059\u308b\n\t\t\tclient.connect(userName);\n\t\t}\n\t}\n\n\t// \u30b5\u30fc\u30d0\u30fc\u304b\u3089\u5207\u65ad\u3059\u308b\n\t// Multiplayer_Photon \u306e\u30c7\u30b9\u30c8\u30e9\u30af\u30bf\u3067\u81ea\u52d5\u7684\u306b\u5207\u65ad\u3055\u308c\u308b\u305f\u3081\u3001\u660e\u793a\u7684\u306b\u547c\u3076\u5fc5\u8981\u306f\u306a\u3044\n\t// network.disconnect();\n}\n</code></pre>"},{"location":"foundation/#\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u72b6\u614b","title":"\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u72b6\u614b","text":"<p>\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f\u3001 - \u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3055\u308c\u3066\u3044\u306a\u3044\u72b6\u614b <code>Disconnected</code> - \u30b5\u30fc\u30d0\u30fc\u306b\u63a5\u7d9a\u3055\u308c\u3001\u30ed\u30d3\u30fc\u306b\u3044\u308b\u72b6\u614b <code>InLobby</code> - \u90e8\u5c4b\u306b\u3044\u308b\u72b6\u614b <code>InRoom</code></p> <p>\u306e3\u3064\u306e\u72b6\u614b\u3092\u4e3b\u306b\u3068\u308a\u3001\u52a0\u3048\u3066\u305d\u308c\u3089\u306e\u79fb\u884c\u72b6\u614b\u3092\u5408\u308f\u305b\u30667\u3064\u306e\u72b6\u614b\u3092\u53d6\u308a\u3048\u307e\u3059\u3002 <pre><code>enum class ClientState {\n\tDisconnected,\n\tConnectingToLobby,\n\tInLobby,\n\tJoiningRoom,\n\tInRoom,\n\tLeavingRoom,\n\tDisconnecting,\n};\n</code></pre> \u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306e\u72b6\u614b\u306f<code>.getClientState()</code>\u3067\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"foundation/#\u30eb\u30fc\u30e0\u306e\u4f5c\u6210\u5165\u5ba4","title":"\u30eb\u30fc\u30e0\u306e\u4f5c\u6210\u30fb\u5165\u5ba4","text":"<p>\u30ed\u30d3\u30fc\u306b\u306f\u3001\u8907\u6570\u306e\u90e8\u5c4b\u3092\u4f5c\u6210\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u3001\u307e\u305f\u305d\u306e\u4e2d\u304b\u3089\u90e8\u5c4b\u3092\u9078\u3093\u3067\u5165\u5ba4\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u30de\u30eb\u30c1\u30d7\u30ec\u30a4\u30e4\u30fc\u901a\u4fe1\u306f\u540c\u90e8\u5c4b\u306e\u4e2d\u306b\u3044\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u9593\u3067\u306e\u307f\u884c\u308f\u308c\u3001\u30ed\u30d3\u30fc\u3067\u901a\u4fe1\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p> <ul> <li><code>.createRoom(RoomNameView roomName)</code> : \u30ed\u30d3\u30fc\u5185\u306b\u90e8\u5c4b\u3092\u4f5c\u6210\u3057\u3001\u5165\u5ba4\u3059\u308b\u3002\u203b<code>RoomNameView</code>\u306f<code>StringView</code>\u306e\u30a8\u30a4\u30ea\u30a2\u30b9</li> <li><code>.joinRoom(RoomNameView roomName)</code> : \u30ed\u30d3\u30fc\u5185\u306b\u3059\u3067\u306b\u3042\u308b\u90e8\u5c4b\u306b\u5bfe\u3057\u3066\u5165\u5ba4\u3059\u308b\u3002</li> <li><code>.leaveRoom()</code> : \u4eca\u3044\u308b\u90e8\u5c4b\u304b\u3089\u9000\u51fa\u3059\u308b\u3002</li> </ul> <p><code>roomName</code>\u306fRoomID\u3068\u3057\u3066\u6a5f\u80fd\u3057\u3001\u540c\u3058\u540d\u524d\u306e\u30eb\u30fc\u30e0\u3092\u8907\u6570\u4f5c\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u307e\u305f\u3001\u65e5\u672c\u8a9e\u306e\u6587\u5b57\u306a\u3069\u3092\u5165\u308c\u3066\u306f\u3044\u3051\u307e\u305b\u3093\u3002\u82f1\u6570\u5b57\u3068\u8a18\u53f7\u306e\u307f\u3067\u69cb\u6210\u3057\u3066\u304f\u3060\u3055\u3044\u3002</p>"},{"location":"foundation/#\u30eb\u30fc\u30e0\u4f5c\u6210\u30aa\u30d7\u30b7\u30e7\u30f3","title":"\u30eb\u30fc\u30e0\u4f5c\u6210\u30aa\u30d7\u30b7\u30e7\u30f3","text":"<p>\u30eb\u30fc\u30e0\u4f5c\u6210\u30aa\u30d7\u30b7\u30e7\u30f3\u3092\u8868\u3059\u578b\u3068\u3057\u3066<code>RoomCreateOption</code>\u304c\u7528\u610f\u3055\u308c\u3066\u3044\u307e\u3059\u3002 - <code>isVisible()</code> : \u30ed\u30d3\u30fc\u306e\u30eb\u30fc\u30e0\u4e00\u89a7\u306b\u8868\u793a\u3055\u308c\u308b\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067<code>true</code> - <code>isOpen()</code> : \u4ed6\u306e\u4eba\u304c\u5165\u5ba4\u3067\u304d\u308b\u304b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067<code>true</code> - <code>maxPlayers()</code> : \u30eb\u30fc\u30e0\u306b\u5165\u308c\u308b\u6700\u5927\u4eba\u6570\u30020 \u3092\u6307\u5b9a\u3059\u308b\u3068\u7121\u5236\u9650\u306b\u306a\u308b\u3002\u30c7\u30d5\u30a9\u30eb\u30c8\u3067 0 - <code>roomDestroyGracePeriod()</code> : \u30eb\u30fc\u30e0\u306b\u8ab0\u3082\u3044\u306a\u304f\u306a\u3063\u3066\u304b\u3089\u30eb\u30fc\u30e0\u304c\u7834\u68c4\u3055\u308c\u308b\u307e\u3067\u306e\u7336\u4e88\u6642\u9593\u3002\u6700\u59275\u5206(300000ms)</p> <p>\u306a\u3069\u306e\u30aa\u30d7\u30b7\u30e7\u30f3\u6307\u5b9a\u3059\u308b\u3068\u304d\u306b\u4f7f\u7528\u3057\u307e\u3059\u3002<code>.createRoom()</code>\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u6307\u5b9a\u3057\u3066\u4f7f\u3044\u307e\u3059\u3002 <pre><code>//\u30ed\u30d3\u30fc\u304b\u3089\u898b\u3048\u305a\u3001\u6700\u59272\u4eba\u307e\u3067\u306e\u90e8\u5c4b\u3092\u4f5c\u6210\nclient.createRoom(U\"room#\" + ToHex(RandomUint32()), RoomCreateOption().isVisible(false).maxPlayers(2));\n</code></pre></p>"},{"location":"foundation/#\u30ed\u30d3\u30fc\u304b\u3089\u90e8\u5c4b\u306e\u4e00\u89a7\u3092\u53d6\u5f97","title":"\u30ed\u30d3\u30fc\u304b\u3089\u90e8\u5c4b\u306e\u4e00\u89a7\u3092\u53d6\u5f97","text":"<ul> <li> <p><code>.getRoomNameList()</code> : <code>Array&lt;RoomName&gt;</code>\u3067\u30eb\u30fc\u30e0\u306e\u540d\u524d\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u3002\u203b<code>RoomName</code>\u306f<code>String</code>\u306e\u30a8\u30a4\u30ea\u30a2\u30b9</p> </li> <li> <p><code>.getRoomList()</code> : <code>Array&lt;RoomInfo&gt;</code>\u3067\u30eb\u30fc\u30e0\u306e\u60c5\u5831\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b\u3002<code>RoomInfo</code>\u578b\u306f\u30ed\u30d3\u30fc\u304b\u3089\u6240\u5f97\u53ef\u80fd\u306a\u30eb\u30fc\u30e0\u306e\u60c5\u5831\u3092\u30e1\u30f3\u30d0\u5909\u6570\u306b\u6301\u3063\u3066\u3044\u307e\u3059\u3002\u540d\u524d\u4ee5\u4e0a\u306e\u60c5\u5831\u304c\u6b32\u3057\u3044\u5834\u5408\u306f\u3053\u3061\u3089\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002(<code>maxPlayers</code> : \u6700\u5927\u4eba\u6570, <code>playerCount</code> : \u73fe\u5728\u306e\u4eba\u6570...\u306a\u3069)</p> </li> </ul>"},{"location":"foundation/#\u305d\u306e\u4ed6","title":"\u305d\u306e\u4ed6","text":"<ul> <li> <p><code>.joinOrCreateRoom(RoomNameView roomName, const RoomCreateOption&amp; option)</code> : \u6307\u5b9a\u3057\u305f\u540d\u524d\u306e\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3092\u8a66\u307f\u3001\u7121\u304b\u3063\u305f\u5834\u5408\u306b\u30eb\u30fc\u30e0\u306e\u4f5c\u6210\u3092\u8a66\u307f\u307e\u3059\u3002</p> </li> <li> <p><code>.joinRandomRoom()</code> : \u65e2\u5b58\u306e\u30eb\u30fc\u30e0\u306e\u4e2d\u304b\u3089\u30e9\u30f3\u30c0\u30e0\u306b\u53c2\u52a0\u3092\u8a66\u307f\u308b\u3002</p> </li> <li> <p><code>joinRandomOrCreateRoom(RoomNameView roomName, const RoomCreateOption&amp; roomCreateOption)</code> : \u30e9\u30f3\u30c0\u30e0\u306a\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u3092\u8a66\u307f\u3001\u53c2\u52a0\u3067\u304d\u308b\u30eb\u30fc\u30e0\u304c\u7121\u304b\u3063\u305f\u5834\u5408\u306b\u30eb\u30fc\u30e0\u306e\u4f5c\u6210\u3092\u8a66\u307f\u307e\u3059\u3002</p> </li> </ul>"},{"location":"property/","title":"\u30d7\u30ec\u30a4\u30e4\u30fc\u30d7\u30ed\u30d1\u30c6\u30a3\u30fb\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3","text":"<p>\u30eb\u30fc\u30e0\u53ca\u3073\u30eb\u30fc\u30e0\u306b\u53c2\u52a0\u4e2d\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u306f\u3001\u5404\u3005<code>HasTable&lt;String,String&gt;</code>\u578b\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u6301\u305f\u305b\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u30d7\u30ec\u30a4\u30e4\u30fc\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u81ea\u8eab\u306e\u3082\u306e\u306e\u307f\u3092\u7de8\u96c6\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p>"},{"location":"property/#\u30d7\u30ec\u30a4\u30e4\u30fc\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e3b\u306a\u64cd\u4f5c","title":"\u30d7\u30ec\u30a4\u30e4\u30fc\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e3b\u306a\u64cd\u4f5c","text":"<ul> <li><code>String getPlayerProperty(LocalPlayerID localPlayerID, StringView key)</code></li> <li><code>HashTable&lt;String, String&gt; getPlayerProperties(LocalPlayerID localPlayerID)</code></li> <li><code>void setPlayerProperty(StringView key, StringView value)</code></li> <li><code>void removePlayerProperty(StringView key)</code></li> </ul>"},{"location":"property/#\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e3b\u306a\u64cd\u4f5c","title":"\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u4e3b\u306a\u64cd\u4f5c","text":"<ul> <li><code>String getRoomProperty(StringView key)</code></li> <li><code>HashTable&lt;String,String&gt; getRoomProperties()</code></li> <li><code>void setRoomProperty(StringView key, StringView value)</code></li> <li><code>void removeRoomProperty(StringView key)</code></li> </ul>"},{"location":"property/#\u521d\u671f\u5316","title":"\u521d\u671f\u5316","text":"<p><code>RoomCreateOption</code>\u306e<code>properties()</code>\u3092\u7528\u3044\u3066\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p>"},{"location":"property/#\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u516c\u958b","title":"\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u516c\u958b","text":"<p>\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u3046\u3061\u6307\u5b9a\u3057\u305f\u30ad\u30fc\u306e\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u30ed\u30d3\u30fc\u304b\u3089\u95b2\u89a7\u53ef\u80fd\u306b\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 - <code>void setVisibleRoomPropertyKeys(const Array&lt;String&gt;&amp; keys)</code> - <code>Array&lt;String&gt; getVisibleRoomPropertyKeys();</code></p> <p><code>RoomCreateOption</code>\u306e<code>visibleRoomPropertyKeys()</code>\u3067\u521d\u671f\u5024\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>\u30ad\u30fc\u304c\u767b\u9332\u3055\u308c\u305f\u30d7\u30ed\u30d1\u30c6\u30a3\u306f\u3001<code>Array&lt;RoomInfo&gt; getRoomList()</code>\u306b\u3088\u3063\u3066<code>RoomInfo</code>\u3092\u53d6\u5f97\u3057\u305f\u969b\u3001<code>RoomInfo::properties</code>\u3068\u3057\u3066\u53d6\u5f97\u3067\u304d\u307e\u3059\u3002</p>"},{"location":"property/#\u30b3\u30fc\u30eb\u30d0\u30c3\u30af","title":"\u30b3\u30fc\u30eb\u30d0\u30c3\u30af","text":"<ul> <li><code>void onRoomPropertiesChange(const HashTable&lt;String,String&gt;&amp; changes)</code></li> <li><code>void onPlayerPropertiesChange(LocalPlayerID playerID, const HashTable&lt;String, String&gt;&amp; changes)</code></li> </ul> <p>\u306b\u3088\u3063\u3066\u30d7\u30ed\u30d1\u30c6\u30a3\u306e\u5909\u66f4\u3092\u691c\u77e5\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u5f15\u6570\u306b\u306f\u5dee\u5206\u304c\u9001\u3089\u308c\u307e\u3059\u3002</p>"},{"location":"random_matching/","title":"\u30e9\u30f3\u30c0\u30e0\u30de\u30c3\u30c1\u30f3\u30b0","text":"<p><code>joinRandomRoom()</code>\u53ca\u3073<code>joinRandomOrCreateRoom()</code>\u3067\u306f\u57fa\u672c\u7684\u306a\u30e9\u30f3\u30c0\u30e0\u30de\u30c3\u30c1\u30f3\u30b0\u3092\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u3053\u308c\u3089\u306e\u95a2\u6570\u306f\u5f15\u6570\u306b<code>propertyFilter</code>\u3001<code>expectedMaxPlayers</code>\u3001<code>matchmakingMode</code>\u3092\u53d6\u308a\u307e\u3059\u3002</p>"},{"location":"random_matching/#\u30d5\u30a3\u30eb\u30bf\u30fc","title":"\u30d5\u30a3\u30eb\u30bf\u30fc","text":"<p><code>propertyFilter</code>\u3068<code>expectedMaxPlayers</code>\u306f\u30e9\u30f3\u30c0\u30e0\u30de\u30c3\u30c1\u30f3\u30b0\u6642\u306e\u30d5\u30a3\u30eb\u30bf\u30fc\u3068\u3057\u3066\u6a5f\u80fd\u3057\u307e\u3059\u3002</p> <p>\u30eb\u30fc\u30e0\u306e\u516c\u958b\u3055\u308c\u305f\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u53c2\u7167\u3057\u3001<code>propertyFilter</code>\u3067\u4e0e\u3048\u305f<code>{key,value}</code>\u304c\u5168\u3066\u4e00\u81f4\u3059\u308b\u30eb\u30fc\u30e0\u3092\u30e9\u30f3\u30c0\u30e0\u30de\u30c3\u30c1\u30f3\u30b0\u306e\u5bfe\u8c61\u3068\u3057\u307e\u3059\u3002<code>propertyFilter</code>\u304c\u516c\u958b\u3055\u308c\u305f\u30eb\u30fc\u30e0\u30d7\u30ed\u30d1\u30c6\u30a3\u3092\u7db2\u7f85\u3057\u3066\u3044\u308b\u5fc5\u8981\u306f\u3042\u308a\u307e\u305b\u3093\u3002</p> <p><code>expectedMaxPlayers</code>\u306f\u30eb\u30fc\u30e0\u306b\u8a2d\u5b9a\u3055\u308c\u305f<code>maxPlayers</code>\u3092\u53c2\u7167\u3057\u3001\u4e00\u81f4\u3059\u308b\u3082\u306e\u306e\u307f\u3092\u5bfe\u8c61\u3068\u3057\u307e\u3059\u30020\u304c\u8a2d\u5b9a\u3055\u308c\u305f\u5834\u5408\u306f\u7121\u8996\u3055\u308c\u307e\u3059\u3002</p>"},{"location":"random_matching/#matchmakingmode","title":"MatchmakingMode","text":"<p><code>MatchmakingMode</code>\u306f\u4ee5\u4e0b\u3067\u4e0e\u3048\u3089\u308c\u308b\u5217\u6319\u578b\u3067\u3001\u30c7\u30d5\u30a9\u30eb\u30c8\u306f<code>MatchmakingMode::FillOldestRoom</code>\u3067\u3059\u3002 <pre><code>/// @brief \u30e9\u30f3\u30c0\u30e0\u5165\u5ba4\u6642\u306e\u30de\u30c3\u30c1\u30e1\u30a4\u30ad\u30f3\u30b0\u30e2\u30fc\u30c9\nenum class MatchmakingMode : uint8\n{\n\t/// @brief \u53e4\u3044\u30eb\u30fc\u30e0\u304b\u3089\u3046\u3081\u3066\u3044\u304f\u3088\u3046\u306b\u5165\u5ba4\n\tFillOldestRoom,\n\n\t/// @brief \u9806\u6b21\u5747\u7b49\u306b\u914d\u5206\u3059\u308b\u3088\u3046\u306b\u5165\u5ba4\n\tSerial,\n\n\t/// @brief \u30e9\u30f3\u30c0\u30e0\u306b\u5165\u5ba4\n\tRandom,\n};\n</code></pre></p>"},{"location":"reconnectAndRejoin/","title":"\u90e8\u5c4b\u3078\u306e\u518d\u5165\u5ba4","text":"<p>\u63a5\u7d9a\u304c\u5207\u308c\u305f\u3042\u3068\u3001<code>.reconnectAndRejoin()</code>\u3092\u547c\u3076\u3053\u3068\u3067\u518d\u3073\u540c\u3058\u30d7\u30ec\u30a4\u30e4\u30fc\u3068\u3057\u3066\u5165\u308a\u76f4\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002<code>.reconnectAndRejoin()</code>\u306f\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u304c<code>Disconnected</code>\u304b<code>InLobby</code>\u306e\u969b\u306b\u547c\u3073\u51fa\u3059\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002\u6210\u529f\u3059\u308b\u3068<code>.joinRoomReturn()</code>\u306e\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u304c\u547c\u3070\u308c\u3001\u90e8\u5c4b\u306b\u5165\u3063\u305f\u969b\u306f\u3001<code>.joinRoomEventAction()</code>\u304c\u81ea\u5206\u542b\u3081\u305f\u90e8\u5c4b\u306e\u5404\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u547c\u3070\u308c\u307e\u3059\u3002</p> <p>\u30c7\u30d5\u30a9\u30eb\u30c8\u306e\u30eb\u30fc\u30e0\u306f\u518d\u5165\u5ba4\u3067\u304d\u308b\u8a2d\u5b9a\u306b\u306a\u3063\u3066\u3044\u307e\u305b\u3093\u3002\u518d\u5165\u5ba4\u304c\u51fa\u6765\u308b\u3088\u3046\u306b\u3059\u308b\u306b\u306f\u3001<code>RoomCreateOption</code>\u306e<code>rejoinGracePeriod()</code>\u3092\u8a2d\u5b9a\u3059\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002<code>rejoinGracePeriod()</code>\u3067\u518d\u53c2\u52a0\u53ef\u80fd\u306a\u7336\u4e88\u6642\u9593\u3092\u8a2d\u5b9a\u3059\u308b\u3053\u3068\u304c\u3067\u304d\u307e\u3059\u3002\u4f8b\u3048\u3070\u3001<code>RoomCreateOption().rejoinGracePeriod(1min)</code>\u3068\u3059\u308b\u3068\u30011\u5206\u9593\u306f\u518d\u5165\u5ba4\u304c\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002<code>RoomCreateOption().rejoinGracePeriod(unspecified)</code>\u3068\u3059\u308b\u3068\u90e8\u5c4b\u304c\u5b58\u7d9a\u3059\u308b\u9650\u308a\u518d\u5165\u5ba4\u53ef\u80fd\u3068\u306a\u308a\u307e\u3059\u3002</p> <p>\u518d\u5165\u5ba4\u53ef\u80fd\u306a\u90e8\u5c4b\u306b\u901a\u5e38\u306e<code>.joinRoom()</code>\u3067\u5165\u5ba4\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002\u307e\u305f\u3001<code>.leaveRoom()</code>\u3092\u7528\u3044\u3066\u660e\u793a\u7684\u306b\u9000\u51fa\u3057\u305f\u5834\u5408\u306f\u3001\u518d\u5165\u5ba4\u3067\u304d\u307e\u305b\u3093\u3002\u518d\u5165\u5ba4\u53ef\u80fd\u306a\u90e8\u5c4b\u306f\u3001<code>.disconnect()</code>\u3067\u63a5\u7d9a\u3057\u305f\u308a\u3001\u4e88\u671f\u305b\u305a\u5207\u65ad\u3055\u308c\u305f\u308a\u3001<code>.leaveRoom(true)</code>\uff08<code>willComeBack</code>\u3092\u5f15\u6570\u306b\u3068\u308b\uff09\u3067\u9000\u51fa\u3057\u305f\u3068\u304d\u3067\u3059\u3002</p> <p><code>.leaveRoom()</code>\u3084<code>.leaveRoom(false)</code>\u306b\u3088\u3063\u3066\u9000\u51fa\u3057\u305f\u5834\u5408\u3001\u3064\u307e\u308a\u3053\u308c\u4ee5\u964d\u305d\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u53c2\u52a0\u3059\u308b\u3053\u3068\u304c\u306a\u3044\u5834\u5408\u3001\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u9000\u51fa\u3057\u305f\u3053\u3068\u3092\u77e5\u3089\u305b\u308b\u30b3\u30fc\u30eb\u30d0\u30c3\u30af\u3067\u3042\u308b<code>void leaveRoomEventAction(LocalPlayerID playerID, bool isInactive);</code>\u306f\u3001\u5f15\u6570\u306e<code>isInactive</code>\u3092<code>false</code>\u3068\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u3067\u9000\u51fa\u3057\u305f\u5834\u5408\u3067\u304b\u3064\u90e8\u5c4b\u306e<code>rejoinGracePeriod()</code>\u304c0ms\u3088\u308a\u5927\u304d\u304f\u8a2d\u5b9a\u3055\u308c\u3066\u3044\u308b\u3068\u304d\u3001\u3064\u307e\u308a\u4eca\u5f8c\u307e\u305f\u518d\u5165\u5ba4\u3059\u308b\u53ef\u80fd\u6027\u304c\u3042\u308b\u5834\u5408<code>isInactive</code>\u3092<code>true</code>\u3068\u3057\u307e\u3059\u3002</p> <p><code>isInactive</code>\u304c<code>true</code>\u3067<code>leaveRoomEventAction()</code>\u304c\u547c\u3070\u308c\u305f\u3042\u3068\u3001\u305d\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c<code>rejoinGracePeriod()</code>\u4ee5\u5185\u306b\u53c2\u52a0\u3059\u308b\u3053\u3068\u306a\u304f\u671f\u9650\u304c\u5207\u308c\u305f\u3068\u304d\u3001\u3082\u3046\u4e00\u5ea6<code>isInactive</code>\u304c<code>false</code>\u3067<code>leaveRoomEventAction()</code>\u304c\u547c\u3070\u308c\u307e\u3059\u3002</p> <p>\u518d\u5165\u5ba4\u3092\u8003\u616e\u3057\u305f\u30b5\u30f3\u30d7\u30eb <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\nstruct Badge{\n\tCircle circle;\n\tColorF color;\n\n\tBadge&amp; moveBy(const Vec2&amp; v) {\n\t\tcircle.moveBy(v);\n\t\treturn *this;\n\t}\n\n\tBadge movedBy(const Vec2&amp; v) const {\n\t\treturn Badge{ circle.movedBy(v), color };\n\t}\n\n\ttemplate &lt;class Archive&gt;\n\tvoid SIV3D_SERIALIZE(Archive&amp; archive)\n\t{\n\t\tarchive(circle, color);\n\t}\n};\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\nclass SharePlayerData {\n\tVec2 m_pos = {};\n\tColorF m_color = Palette::White;\n\n\tOptional&lt;Badge&gt; m_pickedBadge;\n\npublic:\n\tSharePlayerData() = default;\n\n\tSharePlayerData(const Vec2&amp; pos, const ColorF&amp; color)\n\t\t: m_pos(pos)\n\t\t, m_color(color) {}\n\n\tconst Vec2&amp; pos() const { return m_pos; }\n\tconst ColorF&amp; color() const { return m_color; }\n\tconst Optional&lt;Badge&gt;&amp; pickedBadge() const { return m_pickedBadge; }\n\n\tvoid setPos(const Vec2&amp; pos) { m_pos = pos; }\n\tvoid setColor(const ColorF&amp; color) { m_color = color; }\n\n\tvoid setPickedBadge(const Badge&amp; circle) { m_pickedBadge = circle; }\n\tvoid resetPickedBadge() { m_pickedBadge.reset(); }\n\n\n\ttemplate &lt;class Archive&gt;\n\tvoid SIV3D_SERIALIZE(Archive&amp; archive)\n\t{\n\t\tarchive(m_pos, m_color, m_pickedBadge);\n\t}\n};\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30c7\u30fc\u30bf\nclass ShareGameData\n{\n\tHashTable&lt;LocalPlayerID, SharePlayerData&gt; m_players;\n\n\tArray&lt;Badge&gt; m_badges;\n\npublic:\n\tShareGameData() {\n\t\tfor (int i = 0; i &lt; 10; ++i) {\n\t\t\tm_badges.push_back(Badge(Circle(RandomVec2(Scene::Rect()), Random(10, 50)), RandomColor()));\n\t\t}\n\t}\n\n\tauto&amp; players() { return m_players; }\n\n\tSharePlayerData&amp; player(LocalPlayerID playerID) { return m_players[playerID]; }\n\n\tconst auto&amp; badges() const { return m_badges; }\n\n\tOptional&lt;size_t&gt; findBadge(const Vec2&amp; pos) const\n\t{\n\t\tfor (auto [i, badge] : m_badges | std::views::enumerate | std::views::reverse)\n\t\t{\n\t\t\tif (badge.circle.intersects(pos))\n\t\t\t{\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn none;\n\t}\n\n\tvoid playerPickCircle(LocalPlayerID playerID, const Vec2&amp; pos)\n\t{\n\t\tif (auto i = findBadge(pos))\n\t\t{\n\t\t\tauto badge = m_badges[*i];\n\t\t\tm_badges.remove_at(*i);\n\t\t\tplayer(playerID).setPickedBadge(badge.moveBy(-pos));\n\t\t}\n\t}\n\n\tvoid playerDropCircle(LocalPlayerID playerID, const Vec2&amp; pos)\n\t{\n\t\tif (auto badge = player(playerID).pickedBadge())\n\t\t{\n\t\t\tm_badges.push_back(badge-&gt;moveBy(pos));\n\t\t\tplayer(playerID).resetPickedBadge();\n\t\t}\n\t}\n\n\ttemplate &lt;class Archive&gt;\n\tvoid SIV3D_SERIALIZE(Archive&amp; archive)\n\t{\n\t\tarchive(m_players, m_badges);\n\t}\n};\n\nstruct PickBadgeLocalChange {\n\tsize_t pickedBadgeIndex;\n\tBadge badge;\n};\n\n\nnamespace EventCode {\n\tenum : uint8\n\t{\n\t\t//\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306f1\u304b\u3089199\u307e\u3067\u306e\u7bc4\u56f2\u3092\u4f7f\u3046\n\t\tsendShareGameData = 1,\n\t\taddPlayer,\n\t\tsetPlayerPos,\n\t\tpickCircle_toHost,\n\t\tdropCircle_toHost,\n\t\tplayerPickCircle,\n\t\tplayerDropCircle,\n\t\terasePlayer,\n\t};\n}\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n\tMyClient()\n\t\t: Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)), U\"1.0\", Verbose::Yes)\n\t{\n\t\tRegisterEventCallback(EventCode::sendShareGameData, &amp;MyClient::eventReceived_sendShareGameData);\n\t\tRegisterEventCallback(EventCode::addPlayer, &amp;MyClient::eventReceived_addPlayer);\n\t\tRegisterEventCallback(EventCode::setPlayerPos, &amp;MyClient::eventReceived_setPlayerPos);\n\t\tRegisterEventCallback(EventCode::pickCircle_toHost, &amp;MyClient::eventReceived_pickCircle_toHost);\n\t\tRegisterEventCallback(EventCode::dropCircle_toHost, &amp;MyClient::eventReceived_dropCircle_toHost);\n\t\tRegisterEventCallback(EventCode::playerPickCircle, &amp;MyClient::eventReceived_playerPickCircle);\n\t\tRegisterEventCallback(EventCode::playerDropCircle, &amp;MyClient::eventReceived_playerDropCircle);\n\t\tRegisterEventCallback(EventCode::erasePlayer, &amp;MyClient::eventReceived_erasePlayer);\n\t}\n\n\tOptional&lt;ShareGameData&gt; shareGameData;\n\n\tOptional&lt;PickBadgeLocalChange&gt; pickBadgeLocalChange;\n\n\tOptional&lt;Badge&gt; dropBadgeLocalChange;\n\n\n\t//shareGameData\u3092\u5909\u66f4\u3057\u3001\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u3082\u540c\u69d8\u306e\u5909\u66f4\u3092\u884c\u3046\u3088\u3046\u901a\u77e5\u3059\u308b\u3002\n\n\tvoid setPlayerPos(const Vec2&amp; pos) {\n\t\tif (not shareGameData) return;\n\t\tshareGameData-&gt;player(getLocalPlayerID()).setPos(pos);\n\t\tsendEvent(MultiplayerEvent(EventCode::setPlayerPos), pos);\n\t}\n\n\tvoid pickCircle(const Vec2&amp; pos) {\n\t\tif (not shareGameData) return;\n\t\tif (isHost()) {\n\t\t\tshareGameData-&gt;playerPickCircle(getLocalPlayerID(), pos);\n\t\t\tsendEvent(MultiplayerEvent(EventCode::playerPickCircle), getLocalPlayerID(), pos);\n\t\t}\n\t\telse {\n\t\t\tif (auto i = shareGameData-&gt;findBadge(pos))\n\t\t\t{\n\t\t\t\tpickBadgeLocalChange = PickBadgeLocalChange{ *i, shareGameData-&gt;badges()[*i].movedBy(-pos) };\n\t\t\t}\n\n\t\t\t//\u30db\u30b9\u30c8\u306b\u901a\u77e5\n\t\t\tsendEvent(MultiplayerEvent(EventCode::pickCircle_toHost, EventReceiverOption::Host), pos);\n\t\t}\n\t}\n\n\tvoid dropCircle(const Vec2&amp; pos) {\n\t\tif (not shareGameData) return;\n\t\tif (isHost()) {\n\t\t\tshareGameData-&gt;playerDropCircle(getLocalPlayerID(), pos);\n\t\t\tsendEvent(MultiplayerEvent(EventCode::playerDropCircle), getLocalPlayerID(), pos);\n\t\t}\n\t\telse {\n\t\t\tif (auto badge = shareGameData-&gt;player(getLocalPlayerID()).pickedBadge()) {\n\t\t\t\tdropBadgeLocalChange = badge-&gt;moveBy(pos);\n\t\t\t}\n\n\t\t\t//\u30db\u30b9\u30c8\u306b\u901a\u77e5\n\t\t\tsendEvent(MultiplayerEvent(EventCode::dropCircle_toHost, EventReceiverOption::Host), pos);\n\t\t}\n\t}\n\nprivate:\n\n\t//\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u305f\u3089\u305d\u308c\u306b\u5fdc\u3058\u305f\u51e6\u7406\u3092\u884c\u3046\n\n\tvoid eventReceived_sendShareGameData(LocalPlayerID playerID, const ShareGameData&amp; data)\n\t{\n\t\tshareGameData = data;\n\t}\n\n\tvoid eventReceived_addPlayer(LocalPlayerID playerID, LocalPlayerID newPlayerID, const SharePlayerData&amp; data)\n\t{\n\t\tif (not shareGameData) return;\n\t\tshareGameData-&gt;players().emplace(newPlayerID, data);\n\t}\n\n\tvoid eventReceived_setPlayerPos(LocalPlayerID playerID, const Vec2&amp; pos)\n\t{\n\t\tif (not shareGameData) return;\n\t\tshareGameData-&gt;player(playerID).setPos(pos);\n\t}\n\n\tvoid eventReceived_pickCircle_toHost(LocalPlayerID playerID, const Vec2&amp; pos)\n\t{\n\t\tif (not shareGameData) return;\n\t\tif (not isHost()) return;\n\t\tshareGameData-&gt;playerPickCircle(playerID, pos);\n\t\tsendEvent(MultiplayerEvent(EventCode::playerPickCircle), playerID, pos);\n\t}\n\n\tvoid eventReceived_dropCircle_toHost(LocalPlayerID playerID, const Vec2&amp; pos)\n\t{\n\t\tif (not shareGameData) return;\n\t\tif (not isHost()) return;\n\t\tshareGameData-&gt;playerDropCircle(playerID, pos);\n\t\tsendEvent(MultiplayerEvent(EventCode::playerDropCircle), playerID, pos);\n\t}\n\n\tvoid eventReceived_playerPickCircle(LocalPlayerID hostID, LocalPlayerID pickerID, const Vec2&amp; pos)\n\t{\n\t\tif (not shareGameData) return;\n\t\tshareGameData-&gt;playerPickCircle(pickerID, pos);\n\n\t\tif (pickerID == getLocalPlayerID()) {\n\t\t\tpickBadgeLocalChange.reset();\n\t\t}\n\t}\n\n\tvoid eventReceived_playerDropCircle(LocalPlayerID hostID, LocalPlayerID dropperID, const Vec2&amp; pos)\n\t{\n\t\tif (not shareGameData) return;\n\t\tshareGameData-&gt;playerDropCircle(dropperID, pos);\n\n\t\tif (dropperID == getLocalPlayerID()) {\n\t\t\tdropBadgeLocalChange.reset();\n\t\t}\n\t}\n\n\tvoid eventReceived_erasePlayer(LocalPlayerID playerID, LocalPlayerID erasePlayerID)\n\t{\n\t\tif (not shareGameData) return;\n\t\tshareGameData-&gt;players().erase(erasePlayerID);\n\t}\n\n\tvoid joinRoomEventAction(const LocalPlayer&amp; newPlayer, const Array&lt;LocalPlayerID&gt;&amp; playerIDs, bool isSelf) override\n\t{\n\n\t\tconst bool rejoin = shareGameData ? shareGameData-&gt;players().contains(newPlayer.localID) : false;\n\n\t\t//\u81ea\u5206\u304c\u5165\u5ba4\u3057\u305f\u6642\n\t\tif (isSelf) {\n\t\t\tpickBadgeLocalChange.reset();\n\t\t\tdropBadgeLocalChange.reset();\n\t\t}\n\n\t\t//\u30db\u30b9\u30c8\u304c\u5165\u5ba4\u3057\u305f\u6642\u304b\u3064\u518d\u5165\u5ba4\u3067\u306a\u3044\u6642\u3001\u3064\u307e\u308a\u90e8\u5c4b\u3092\u65b0\u898f\u4f5c\u6210\u3057\u305f\u6642\n\t\tif (isSelf and isHost() and not rejoin) {\n\t\t\tshareGameData = ShareGameData();\n\t\t\tshareGameData-&gt;players().emplace(newPlayer.localID, SharePlayerData(Scene::Center(), RandomColorF()));\n\t\t}\n\n\t\t//\u8ab0\u304b\u304c\u90e8\u5c4b\u306b\u5165\u3063\u3066\u6765\u305f\u6642\u3001\u30db\u30b9\u30c8\u306f\u305d\u306e\u4eba\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\n\t\tif (not isSelf and isHost()) {\n\t\t\tsendEvent(MultiplayerEvent(EventCode::sendShareGameData, { newPlayer.localID }), *shareGameData);\n\n\t\t\tif (not rejoin) {\n\n\t\t\t\t//\u65b0\u3057\u3044\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3001\u4ed6\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u9001\u4fe1\n\t\t\t\tSharePlayerData newPlayerData(Scene::Center(), RandomColorF());\n\t\t\t\tshareGameData-&gt;players().emplace(newPlayer.localID, newPlayerData);\n\t\t\t\tsendEvent(MultiplayerEvent(EventCode::addPlayer), newPlayer.localID, newPlayerData);\n\t\t\t}\n\t\t}\n\t}\n\n\tvoid leaveRoomEventAction(LocalPlayerID playerID, bool isInactive) override\n\t{\n\t\tif (not shareGameData) return;\n\n\t\tif (isHost() and not isInactive) {\n\t\t\t\n\t\t\tif (auto&amp; badge = shareGameData-&gt;player(playerID).pickedBadge()) {\n\t\t\t\tconst Vec2&amp; pos = shareGameData-&gt;player(playerID).pos();\n\t\t\t\tshareGameData-&gt;playerDropCircle(playerID, pos);\n\t\t\t\tsendEvent(MultiplayerEvent(EventCode::playerDropCircle), playerID, pos);\n\t\t\t}\n\n\t\t\tshareGameData-&gt;players().erase(playerID);\n\t\t\tsendEvent(MultiplayerEvent(EventCode::erasePlayer), playerID);\n\t\t}\n\t}\n};\n\nvoid Main()\n{\n\tMyClient client;\n\t\n\twhile (System::Update())\n\t{\n\t\tif (client.isActive())\n\t\t{\n\t\t\tclient.update();\n\t\t}\n\t\telse {\n\n\t\t\tif (client.reconnectAndRejoin()) {\n\t\t\t\tPrint &lt;&lt; U\"reconnectAndRejoin\";\n\t\t\t}\n\t\t\telse {\n\t\t\t\tPrint &lt;&lt; U\"connect\";\n\t\t\t\tclient.connect(U\"player\", U\"jp\");\n\t\t\t}\n\t\t}\n\n\t\tif (client.isInLobby())\n\t\t{\n\t\t\tScene::Rect().draw(Palette::Steelblue);\n\n\t\t\tif (SimpleGUI::ButtonAt(U\"joinRandomOrCreateRoom\", Scene::Center(), 300))\n\t\t\t{\n\t\t\t\t//\u9069\u5f53\u306a\u90e8\u5c4b\u306b\u5165\u308b\u304b\u3001\u90e8\u5c4b\u304c\u306a\u3051\u308c\u3070\u65b0\u898f\u4f5c\u6210\u3059\u308b\u3002\u90e8\u5c4b\u304c\u3042\u308b\u9650\u308a\u518d\u5165\u5ba4\u53ef\u80fd\u306b\u3057\u3001\u90e8\u5c4b\u304c5\u79d2\u9593\u7a7a\u3044\u305f\u3089\u90e8\u5c4b\u3092\u524a\u9664\u3059\u308b\u3002\n\t\t\t\tclient.joinRandomOrCreateRoom(U\"\", RoomCreateOption().rejoinGracePeriod(unspecified).roomDestroyGracePeriod(5s));\n\t\t\t}\n\t\t}\n\n\t\tif (client.isInRoom())\n\t\t{\n\t\t\tScene::Rect().draw(Palette::Sienna);\n\n\t\t\tif (client.shareGameData) {\n\n\t\t\t\t{\n\t\t\t\t\tVec2 prePos = client.shareGameData-&gt;player(client.getLocalPlayerID()).pos();\n\t\t\t\t\tVec2 nextPos = Cursor::Pos();\n\t\t\t\t\tif (prePos != nextPos) {\n\t\t\t\t\t\tclient.setPlayerPos(nextPos);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (MouseL.down()) {\n\t\t\t\t\tclient.pickCircle(Cursor::Pos());\n\t\t\t\t}\n\n\t\t\t\tif (MouseL.up()) {\n\t\t\t\t\tclient.dropCircle(Cursor::Pos());\n\t\t\t\t}\n\n\t\t\t\tfor (auto [i,badge] : client.shareGameData-&gt;badges() | std::views::enumerate) {\n\n\t\t\t\t\tif (client.pickBadgeLocalChange and i == client.pickBadgeLocalChange-&gt;pickedBadgeIndex) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tbadge.circle.draw(badge.color);\n\t\t\t\t}\n\n\t\t\t\tif (auto badge = client.dropBadgeLocalChange) {\n\t\t\t\t\tbadge-&gt;circle.draw(badge-&gt;color);\n\t\t\t\t}\n\n\t\t\t\t//\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\n\t\t\t\tfor (const auto&amp; [playerID, data] : client.shareGameData-&gt;players()) {\n\t\t\t\t\tif (auto&amp; badge = data.pickedBadge();badge and not client.dropBadgeLocalChange) {\n\t\t\t\t\t\tCircle circle = badge-&gt;circle.movedBy(data.pos() - Vec2(2, 2));\n\t\t\t\t\t\tcircle.drawShadow(Vec2(5, 5), 10, 2.0, ColorF(0.0, 0.2)).draw(badge-&gt;color);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (playerID == client.getLocalPlayerID()) {\n\t\t\t\t\t\tif (client.pickBadgeLocalChange) {\n\t\t\t\t\t\t\tCircle circle = client.pickBadgeLocalChange-&gt;badge.circle.movedBy(data.pos() - Vec2(2, 2));\n\t\t\t\t\t\t\tcircle.drawShadow(Vec2(5, 5), 10, 2.0, ColorF(0.0, 0.2)).draw(client.pickBadgeLocalChange-&gt;badge.color);\n\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\n\t\t\t\t\tCircle(data.pos(), 3).draw(data.color());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (SimpleGUI::Button(U\"LeaveRoom\", Vec2{ 20, 20 }, 160))\n\t\t\t{\n\t\t\t\tclient.leaveRoom();\n\t\t\t}\n\t\t}\n\n\t\tif (not client.isInLobby() and not client.isInRoom()) {\n\t\t\t//\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\n\t\t\tsize_t t = Floor(fmod(Scene::Time() / 0.1, 8));\n\t\t\tfor (size_t i : step(8)) {\n\t\t\t\tVec2 n = Circular(1, i * Math::TwoPi / 8);\n\t\t\t\tLine(Scene::Center() + n * 10, Arg::direction(n * 10)).draw(LineStyle::RoundCap, 4, t == i ? ColorF(1, 0.9) : ColorF(1, 0.5));\n\t\t\t}\n\t\t}\n\n\t\tif (client.isActive()) {\n\t\t\tif (SimpleGUI::Button(U\"disconnect\", Vec2{ 620, 20 }, 160))\n\t\t\t{\n\t\t\t\tclient.disconnect();\n\t\t\t}\n\t\t}\n\t}\n}\n</code></pre></p>"},{"location":"synchronizing_data/","title":"\u30a4\u30d9\u30f3\u30c8\u9001\u53d7\u4fe1\u306b\u3088\u308b\u30c7\u30fc\u30bf\u306e\u540c\u671f","text":"<p>\u30d7\u30ec\u30a4\u30e4\u30fc\u9593\u3067\u30c7\u30fc\u30bf\u3092\u540c\u671f\u3059\u308b\u305f\u3081\u306b\u3001\u305d\u308c\u305e\u308c\u304c\u6301\u3064\u30c7\u30fc\u30bf\u306b\u540c\u3058\u64cd\u4f5c\u3092\u884c\u308f\u305b\u307e\u3059\u3002\u30c7\u30fc\u30bf\u3092\u5909\u66f4\u3057\u305f\u969b\u306f\u305d\u308c\u3092\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u901a\u77e5\u3057\u3001\u901a\u77e5\u3092\u53d7\u3051\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u306f\u305d\u308c\u306b\u5fdc\u3058\u305f\u540c\u69d8\u306e\u64cd\u4f5c\u3092\u884c\u3044\u307e\u3059\u3002</p> <p>\u5165\u5ba4\u3057\u3066\u304d\u305f\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u306f\u3001\u73fe\u5728\u306e\u90e8\u5c4b\u306e\u60c5\u5831\u3092\u6559\u3048\u308b\u5fc5\u8981\u304c\u3042\u308a\u307e\u3059\u3002\u305d\u306e\u5f79\u5272\u3092\u30db\u30b9\u30c8\u306b\u62c5\u308f\u305b\u307e\u3059\u3002\u30db\u30b9\u30c8\u306f\u90e8\u5c4b\u306b\u4e00\u4eba\u3060\u3051\u5272\u308a\u5f53\u3066\u3089\u308c\u305f\u5b58\u5728\u3067\u3001\u901a\u5e38\u306f\u90e8\u5c4b\u3092\u4f5c\u3063\u305f\u4eba\u306b\u5272\u308a\u5f53\u3066\u3089\u308c\u307e\u3059\u3002\u30db\u30b9\u30c8\u304c\u90e8\u5c4b\u3092\u629c\u3051\u308b\u3068\u5225\u306e\u4eba\u304c\u30db\u30b9\u30c8\u3068\u306a\u308a\u3001\u5fc5\u305a\u30db\u30b9\u30c8\u304c\u4e00\u4eba\u3044\u308b\u72b6\u614b\u304c\u4fdd\u305f\u308c\u307e\u3059\u3002\u30db\u30b9\u30c8\u306f\u90e8\u5c4b\u306b\u4eba\u304c\u5165\u3063\u3066\u304d\u305f\u306e\u3092<code>joinRoomEventAction</code>\u3067\u691c\u77e5\u3057\u3001\u65b0\u3057\u3044\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u90e8\u5c4b\u306e\u5171\u6709\u30c7\u30fc\u30bf\u9001\u4fe1\u3057\u307e\u3059\u3002</p> \u30c7\u30fc\u30bf\u306e\u540c\u671f\u30b5\u30f3\u30d7\u30eb <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30c7\u30fc\u30bf\nclass ShareGameData\n{\n    int32 m_count = 0;\n    Array&lt;bool&gt; m_switches;\n\npublic:\n    ShareGameData() : m_switches(5, false) {}\n\n    int32 count() const { return m_count; }\n    const Array&lt;bool&gt;&amp; switches() const { return m_switches; }\n\n    void setCount(int32 count) { m_count = count; }\n    void setSwitch(size_t index, bool value) { m_switches[index] = value; }\n\n    template &lt;class Archive&gt;\n    void SIV3D_SERIALIZE(Archive&amp; archive)\n    {\n        archive(m_count, m_switches);\n    }\n};\n\nnamespace EventCode {\n    enum : uint8\n    {\n        //\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306f1\u304b\u3089199\u307e\u3067\u306e\u7bc4\u56f2\u3092\u4f7f\u3046\n        sendShareGameData = 1,\n        setValue,\n        setSwitch,\n    };\n}\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n    MyClient()\n        : Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)), U\"1.0\", Verbose::No)\n    {\n        RegisterEventCallback(EventCode::sendShareGameData, &amp;MyClient::eventReceived_sendShareGameData);\n        RegisterEventCallback(EventCode::setValue, &amp;MyClient::eventReceived_setCount);\n        RegisterEventCallback(EventCode::setSwitch, &amp;MyClient::eventReceived_setSwitch);\n    }\n\n    Optional&lt;ShareGameData&gt; shareGameData;\n\n    //shareGameData\u3092\u5909\u66f4\u3057\u3001\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u3082\u540c\u69d8\u306e\u5909\u66f4\u3092\u884c\u3046\u3088\u3046\u901a\u77e5\u3059\u308b\u3002\n\n    void setCount(int32 count) {\n        if(not shareGameData) return;\n        shareGameData-&gt;setCount(count);\n        sendEvent(MultiplayerEvent(EventCode::setValue), count);\n    }\n\n    void setSwitch(size_t index, bool value) {\n        if (not shareGameData) return;\n        shareGameData-&gt;setSwitch(index, value);\n        sendEvent(MultiplayerEvent(EventCode::setSwitch), index, value);\n    }\n\nprivate:\n\n    //\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u305f\u3089\u305d\u308c\u306b\u5fdc\u3058\u305f\u51e6\u7406\u3092\u884c\u3046\n\n    void eventReceived_sendShareGameData(LocalPlayerID playerID, const ShareGameData&amp; data)\n    {\n        shareGameData = data;\n    }\n\n    void eventReceived_setCount(LocalPlayerID playerID, int32 count)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;setCount(count);\n    }\n\n    void eventReceived_setSwitch(LocalPlayerID playerID, size_t index, bool value)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;setSwitch(index, value);\n    }\n    \n    void joinRoomEventAction(const LocalPlayer&amp; newPlayer, const Array&lt;LocalPlayerID&gt;&amp; playerIDs, bool isSelf) override\n    {\n        //\u5165\u5ba4\u3057\u305f\u3089\u3001\u5171\u6709\u30c7\u30fc\u30bf\u3092\u521d\u671f\u5316\n        if (isSelf) {\n            shareGameData = ShareGameData();\n        }\n\n\n        //\u8ab0\u304b\u304c\u90e8\u5c4b\u306b\u5165\u3063\u3066\u6765\u305f\u6642\u3001\u30db\u30b9\u30c8\u306f\u305d\u306e\u4eba\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\n        if (not isSelf and isHost()) {\n            sendEvent(MultiplayerEvent(EventCode::sendShareGameData, { newPlayer.localID }), *shareGameData);\n        }\n    }\n};\n\nvoid Main()\n{\n    MyClient client;\n\n    Font font(30);\n    \n    while (System::Update())\n    {\n        if (client.isActive())\n        {\n            client.update();\n        }\n        else {\n            client.connect(U\"player\", U\"jp\");\n        }\n\n        if (client.isInLobby())\n        {\n            Scene::Rect().draw(Palette::Steelblue);\n\n            if (SimpleGUI::ButtonAt(U\"joinRandomOrCreateRoom\", Scene::Center(), 300))\n            {\n                client.joinRandomOrCreateRoom(U\"room\");\n            }\n        }\n\n        if (client.isInRoom())\n        {\n            Scene::Rect().draw(Palette::Sienna);\n\n            if (SimpleGUI::Button(U\"LeaveRoom\", Vec2{ 20, 20 }, 160))\n            {\n                client.leaveRoom();\n            }\n\n            if (client.shareGameData) {\n                int32 count = client.shareGameData-&gt;count();\n\n                //\u30ab\u30a6\u30f3\u30c8\u306e\u5024\u3092\u8868\u793a\n                RectF rect = font(count).drawAt(Scene::CenterF().moveBy(0,-50));\n                if (SimpleGUI::ButtonAt(U\"+\", rect.rightCenter().movedBy(50,0)))\n                {\n                    //\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u5024\u3092\u5897\u3084\u3059\n                    client.setCount(count + 1);\n                }\n\n                if (SimpleGUI::ButtonAt(U\"-\", rect.leftCenter().movedBy(-50, 0)))\n                {\n                    //\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u5024\u3092\u6e1b\u3089\u3059\n                    client.setCount(count - 1);\n                }\n\n                //\u30b9\u30a4\u30c3\u30c1\u306e\u72b6\u614b\u3092\u8868\u793a\n                const size_t switchCount = client.shareGameData-&gt;switches().size();\n                for (auto [i, value] : Indexed(client.shareGameData-&gt;switches())) {\n                    const Vec2 pos = Scene::Center().movedBy((i - (switchCount - 1) / 2.0) * 50, 100);\n                    Circle circle(pos, 20);\n                    if (circle.leftClicked()) {\n                        //\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30b9\u30a4\u30c3\u30c1\u306e\u72b6\u614b\u3092\u53cd\u8ee2\n                        client.setSwitch(i, not value);\n                    }\n                    circle.draw(value ? Palette::Lime : Palette::Gray);\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"synchronizing_data/#\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u306e\u540c\u671f","title":"\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u306e\u540c\u671f","text":"<p><code>ShareGameData</code>\u5185\u306b<code>LocalPlayerID</code>\u3068\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u306e<code>HashTable</code>\u3092\u4f5c\u6210\u3057\u307e\u3059\u3002<code>joinRoomEventAction()</code>\u3001<code>leaveRoomEventAction()</code>\u306b\u3088\u3063\u3066<code>HashTable</code>\u3092\u9069\u5207\u306b\u7ba1\u7406\u3057\u307e\u3059\u3002</p> \u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u306e\u540c\u671f\u30b5\u30f3\u30d7\u30eb <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\nclass SharePlayerData {\n    Vec2 m_pos = {};\n    ColorF m_color = Palette::White;\n\npublic:\n    SharePlayerData() = default;\n\n    SharePlayerData(const Vec2&amp; pos, const ColorF&amp; color)\n        : m_pos(pos)\n        , m_color(color) {}\n\n    const Vec2&amp; pos() const { return m_pos; }\n    const ColorF&amp; color() const { return m_color; }\n\n    void setPos(const Vec2&amp; pos) { m_pos = pos; }\n    void setColor(const ColorF&amp; color) { m_color = color; }\n\n    template &lt;class Archive&gt;\n    void SIV3D_SERIALIZE(Archive&amp; archive)\n    {\n        archive(m_pos, m_color);\n    }\n};\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30c7\u30fc\u30bf\nclass ShareGameData\n{\n    HashTable&lt;LocalPlayerID, SharePlayerData&gt; m_players;\n\n    int32 m_count = 0;\n    Array&lt;bool&gt; m_switches;\n\npublic:\n    ShareGameData() : m_switches(5, false) {}\n\n    HashTable&lt;LocalPlayerID, SharePlayerData&gt;&amp; players() { return m_players; }\n\n    SharePlayerData&amp; player(LocalPlayerID playerID) { return m_players[playerID]; }\n\n    int32 count() const { return m_count; }\n    const Array&lt;bool&gt;&amp; switches() const { return m_switches; }\n\n    void setCount(int32 count) { m_count = count; }\n    void setSwitch(size_t index, bool value) { m_switches[index] = value; }\n\n    template &lt;class Archive&gt;\n    void SIV3D_SERIALIZE(Archive&amp; archive)\n    {\n        archive(m_players, m_count, m_switches);\n    }\n};\n\nnamespace EventCode {\n    enum : uint8\n    {\n        //\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306f1\u304b\u3089199\u307e\u3067\u306e\u7bc4\u56f2\u3092\u4f7f\u3046\n        sendShareGameData = 1,\n        setValue,\n        setSwitch,\n        addPlayer,\n        setPlayerPos,\n    };\n}\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n    MyClient()\n        : Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)), U\"1.0\", Verbose::No)\n    {\n        RegisterEventCallback(EventCode::sendShareGameData, &amp;MyClient::eventReceived_sendShareGameData);\n        RegisterEventCallback(EventCode::setValue, &amp;MyClient::eventReceived_setCount);\n        RegisterEventCallback(EventCode::setSwitch, &amp;MyClient::eventReceived_setSwitch);\n        RegisterEventCallback(EventCode::addPlayer, &amp;MyClient::eventReceived_addPlayer);\n        RegisterEventCallback(EventCode::setPlayerPos, &amp;MyClient::eventReceived_setPlayerPos);\n    }\n\n    Optional&lt;ShareGameData&gt; shareGameData;\n\n    //shareGameData\u3092\u5909\u66f4\u3057\u3001\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u3082\u540c\u69d8\u306e\u5909\u66f4\u3092\u884c\u3046\u3088\u3046\u901a\u77e5\u3059\u308b\u3002\n\n    void setCount(int32 count) {\n        if(not shareGameData) return;\n        shareGameData-&gt;setCount(count);\n        sendEvent(MultiplayerEvent(EventCode::setValue), count);\n    }\n\n    void setSwitch(size_t index, bool value) {\n        if (not shareGameData) return;\n        shareGameData-&gt;setSwitch(index, value);\n        sendEvent(MultiplayerEvent(EventCode::setSwitch), index, value);\n    }\n\n    void setPlayerPos(const Vec2&amp; pos) {\n        if (not shareGameData) return;\n        shareGameData-&gt;player(getLocalPlayerID()).setPos(pos);\n        sendEvent(MultiplayerEvent(EventCode::setPlayerPos), pos);\n    }\n\nprivate:\n\n    //\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u305f\u3089\u305d\u308c\u306b\u5fdc\u3058\u305f\u51e6\u7406\u3092\u884c\u3046\n\n    void eventReceived_sendShareGameData(LocalPlayerID playerID, const ShareGameData&amp; data)\n    {\n        shareGameData = data;\n    }\n\n    void eventReceived_setCount(LocalPlayerID playerID, int32 count)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;setCount(count);\n    }\n\n    void eventReceived_setSwitch(LocalPlayerID playerID, size_t index, bool value)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;setSwitch(index, value);\n    }\n\n    void eventReceived_addPlayer(LocalPlayerID playerID, LocalPlayerID newPlayerID, const SharePlayerData&amp; data)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;players().emplace(newPlayerID, data);\n    }\n\n    void eventReceived_setPlayerPos(LocalPlayerID playerID, const Vec2&amp; pos)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;player(playerID).setPos(pos);\n    }\n    \n    void joinRoomEventAction(const LocalPlayer&amp; newPlayer, const Array&lt;LocalPlayerID&gt;&amp; playerIDs, bool isSelf) override\n    {\n        //\u5165\u5ba4\u3057\u305f\u3089\u3001\u5171\u6709\u30c7\u30fc\u30bf\u3092\u521d\u671f\u5316\n        if (isSelf) {\n            shareGameData = ShareGameData();\n        }\n\n        if (isSelf and isHost()) {\n            //\u81ea\u5206\u304c\u30db\u30b9\u30c8\u306e\u5834\u5408\u3001\u81ea\u5206\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\n            shareGameData-&gt;players().emplace(newPlayer.localID, SharePlayerData(Scene::Center(), RandomColorF()));\n        }\n\n\n        //\u8ab0\u304b\u304c\u90e8\u5c4b\u306b\u5165\u3063\u3066\u6765\u305f\u6642\u3001\u30db\u30b9\u30c8\u306f\u305d\u306e\u4eba\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\n        if (not isSelf and isHost()) {\n            sendEvent(MultiplayerEvent(EventCode::sendShareGameData, { newPlayer.localID }), *shareGameData);\n\n            //\u65b0\u3057\u3044\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3001\u4ed6\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u9001\u4fe1\n            SharePlayerData newPlayerData(Scene::Center(), RandomColorF());\n            shareGameData-&gt;players().emplace(newPlayer.localID, newPlayerData);\n            sendEvent(MultiplayerEvent(EventCode::addPlayer), newPlayer.localID, newPlayerData);\n        }\n    }\n\n    void leaveRoomEventAction(LocalPlayerID playerID, bool isInactive) override\n    {\n        shareGameData-&gt;players().erase(playerID);\n    }\n};\n\nvoid Main()\n{\n    MyClient client;\n\n    Font font(30);\n    \n    while (System::Update())\n    {\n        if (client.isActive())\n        {\n            client.update();\n        }\n        else {\n            client.connect(U\"player\", U\"jp\");\n        }\n\n        if (client.isInLobby())\n        {\n            Scene::Rect().draw(Palette::Steelblue);\n\n            if (SimpleGUI::ButtonAt(U\"joinRandomOrCreateRoom\", Scene::Center(), 300))\n            {\n                client.joinRandomOrCreateRoom(U\"room\");\n            }\n        }\n\n        if (client.isInRoom())\n        {\n            Scene::Rect().draw(Palette::Sienna);\n\n            if (SimpleGUI::Button(U\"LeaveRoom\", Vec2{ 20, 20 }, 160))\n            {\n                client.leaveRoom();\n            }\n\n            if (client.shareGameData) {\n                int32 count = client.shareGameData-&gt;count();\n\n                //\u30ab\u30a6\u30f3\u30c8\u306e\u5024\u3092\u8868\u793a\n                RectF rect = font(count).drawAt(Scene::CenterF().moveBy(0,-50));\n                if (SimpleGUI::ButtonAt(U\"+\", rect.rightCenter().movedBy(50,0)))\n                {\n                    //\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u5024\u3092\u5897\u3084\u3059\n                    client.setCount(count + 1);\n                }\n\n                if (SimpleGUI::ButtonAt(U\"-\", rect.leftCenter().movedBy(-50, 0)))\n                {\n                    //\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u3068\u5024\u3092\u6e1b\u3089\u3059\n                    client.setCount(count - 1);\n                }\n\n                //\u30b9\u30a4\u30c3\u30c1\u306e\u72b6\u614b\u3092\u8868\u793a\n                const size_t switchCount = client.shareGameData-&gt;switches().size();\n                for (auto [i, value] : Indexed(client.shareGameData-&gt;switches())) {\n                    const Vec2 pos = Scene::Center().movedBy((i - (switchCount - 1) / 2.0) * 50, 100);\n                    Circle circle(pos, 20);\n                    if (circle.leftClicked()) {\n                        //\u30af\u30ea\u30c3\u30af\u3059\u308b\u3068\u30b9\u30a4\u30c3\u30c1\u306e\u72b6\u614b\u3092\u53cd\u8ee2\n                        client.setSwitch(i, not value);\n                    }\n                    circle.draw(value ? Palette::Lime : Palette::Gray);\n                }\n\n                {\n                    Vec2 prePos = client.shareGameData-&gt;player(client.getLocalPlayerID()).pos();\n                    Vec2 nextPos = Cursor::Pos();\n                    if (prePos != nextPos) {\n                        client.setPlayerPos(nextPos);\n                    }\n                }\n\n                //\u4ed6\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\n                for (const auto&amp; [playerID, data] : client.shareGameData-&gt;players()) {\n                    Circle(data.pos(), 20).draw(data.color());\n                }\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"synchronizing_data/#\u30db\u30b9\u30c8\u3092\u7528\u3044\u305f\u885d\u6483\u89e3\u6d88","title":"\u30db\u30b9\u30c8\u3092\u7528\u3044\u305f\u885d\u6483\u89e3\u6d88","text":"<p>Host\u3092\u4ecb\u3057\u3066\u30c7\u30fc\u30bf\u5909\u66f4\u306e\u7af6\u5408\u3092\u89e3\u6d88\u3057\u307e\u3059\u3002Host\u4ee5\u5916\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306f\u9045\u5ef6\u304c\u767a\u751f\u3059\u308b\u305f\u3081\u3001\u898b\u304b\u3051\u4e0a\u65e9\u304f\u52d5\u3044\u3066\u3044\u308b\u3088\u3046\u306a\u5de5\u592b\u3092\u3057\u307e\u3059\u3002</p> \u30db\u30b9\u30c8\u3092\u7528\u3044\u305f\u540c\u671f\u30b5\u30f3\u30d7\u30eb <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\nstruct Badge {\n    Circle circle;\n    ColorF color;\n\n    Badge&amp; moveBy(const Vec2&amp; v) {\n        circle.moveBy(v);\n        return *this;\n    }\n\n    Badge movedBy(const Vec2&amp; v) const {\n        return Badge{ circle.movedBy(v), color };\n    }\n\n};\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\nclass SharePlayerData {\n    Vec2 m_pos = {};\n    ColorF m_color = Palette::White;\n\n    Optional&lt;Badge&gt; m_pickedBadge;\n\npublic:\n    SharePlayerData() = default;\n\n    SharePlayerData(const Vec2&amp; pos, const ColorF&amp; color)\n        : m_pos(pos)\n        , m_color(color) {}\n\n    const Vec2&amp; pos() const { return m_pos; }\n    const ColorF&amp; color() const { return m_color; }\n    const Optional&lt;Badge&gt;&amp; pickedBadge() const { return m_pickedBadge; }\n\n    void setPos(const Vec2&amp; pos) { m_pos = pos; }\n    void setColor(const ColorF&amp; color) { m_color = color; }\n\n    void setPickedBadge(const Badge&amp; circle) { m_pickedBadge = circle; }\n    void resetPickedBadge() { m_pickedBadge.reset(); }\n\n\n    template &lt;class Archive&gt;\n    void SIV3D_SERIALIZE(Archive&amp; archive)\n    {\n        archive(m_pos, m_color);\n    }\n};\n\n//\u8907\u6570\u30d7\u30ec\u30a4\u30e4\u30fc\u3067\u5171\u6709\u3059\u308b\u30c7\u30fc\u30bf\nclass ShareGameData\n{\n    HashTable&lt;LocalPlayerID, SharePlayerData&gt; m_players;\n\n    Array&lt;Badge&gt; m_badges;\n\npublic:\n    ShareGameData() {\n        for (int i = 0; i &lt; 10; ++i) {\n            m_badges.push_back(Badge(Circle(RandomVec2(Scene::Rect()), Random(10, 50)), RandomColor()));\n        }\n    }\n\n    auto&amp; players() { return m_players; }\n\n    SharePlayerData&amp; player(LocalPlayerID playerID) { return m_players[playerID]; }\n\n    const auto&amp; badges() const { return m_badges; }\n\n    Optional&lt;size_t&gt; findBadge(const Vec2&amp; pos) const\n    {\n        for (auto [i, badge] : m_badges | std::views::enumerate | std::views::reverse)\n        {\n            if (badge.circle.intersects(pos))\n            {\n                return i;\n            }\n        }\n\n        return none;\n    }\n\n    void playerPickCircle(LocalPlayerID playerID, const Vec2&amp; pos)\n    {\n        if (auto i = findBadge(pos))\n        {\n            auto badge = m_badges[*i];\n            m_badges.remove_at(*i);\n            player(playerID).setPickedBadge(badge.moveBy(-pos));\n        }\n    }\n\n    void playerDropCircle(LocalPlayerID playerID, const Vec2&amp; pos)\n    {\n        if (auto badge = player(playerID).pickedBadge())\n        {\n            m_badges.push_back(badge-&gt;moveBy(pos));\n            player(playerID).resetPickedBadge();\n        }\n    }\n\n    template &lt;class Archive&gt;\n    void SIV3D_SERIALIZE(Archive&amp; archive)\n    {\n        archive(m_players, m_badges);\n    }\n};\n\nstruct PickBadgeLocalChange {\n    size_t pickedBadgeIndex;\n    Badge badge;\n};\n\n\nnamespace EventCode {\n    enum : uint8\n    {\n        //\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c9\u306f1\u304b\u3089199\u307e\u3067\u306e\u7bc4\u56f2\u3092\u4f7f\u3046\n        sendShareGameData = 1,\n        addPlayer,\n        setPlayerPos,\n        pickCircle_toHost,\n        dropCircle_toHost,\n        playerPickCircle,\n        playerDropCircle,\n        erasePlayer,\n    };\n}\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n    MyClient()\n        : Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)), U\"1.0\", Verbose::No)\n    {\n        RegisterEventCallback(EventCode::sendShareGameData, &amp;MyClient::eventReceived_sendShareGameData);\n        RegisterEventCallback(EventCode::addPlayer, &amp;MyClient::eventReceived_addPlayer);\n        RegisterEventCallback(EventCode::setPlayerPos, &amp;MyClient::eventReceived_setPlayerPos);\n        RegisterEventCallback(EventCode::pickCircle_toHost, &amp;MyClient::eventReceived_pickCircle_toHost);\n        RegisterEventCallback(EventCode::dropCircle_toHost, &amp;MyClient::eventReceived_dropCircle_toHost);\n        RegisterEventCallback(EventCode::playerPickCircle, &amp;MyClient::eventReceived_playerPickCircle);\n        RegisterEventCallback(EventCode::playerDropCircle, &amp;MyClient::eventReceived_playerDropCircle);\n        RegisterEventCallback(EventCode::erasePlayer, &amp;MyClient::eventReceived_erasePlayer);\n    }\n\n    Optional&lt;ShareGameData&gt; shareGameData;\n\n    Optional&lt;PickBadgeLocalChange&gt; pickBadgeLocalChange;\n\n    Optional&lt;Badge&gt; dropBadgeLocalChange;\n\n\n    //shareGameData\u3092\u5909\u66f4\u3057\u3001\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u3082\u540c\u69d8\u306e\u5909\u66f4\u3092\u884c\u3046\u3088\u3046\u901a\u77e5\u3059\u308b\u3002\n\n    void setPlayerPos(const Vec2&amp; pos) {\n        if (not shareGameData) return;\n        shareGameData-&gt;player(getLocalPlayerID()).setPos(pos);\n        sendEvent(MultiplayerEvent(EventCode::setPlayerPos), pos);\n    }\n\n    void pickCircle(const Vec2&amp; pos) {\n        if (not shareGameData) return;\n        if (isHost()) {\n            shareGameData-&gt;playerPickCircle(getLocalPlayerID(), pos);\n            sendEvent(MultiplayerEvent(EventCode::playerPickCircle), getLocalPlayerID(), pos);\n        }\n        else {\n            if (auto i = shareGameData-&gt;findBadge(pos))\n            {\n                pickBadgeLocalChange = PickBadgeLocalChange{ *i, shareGameData-&gt;badges()[*i].movedBy(-pos) };\n            }\n\n            //\u30db\u30b9\u30c8\u306b\u901a\u77e5\n            sendEvent(MultiplayerEvent(EventCode::pickCircle_toHost, EventReceiverOption::Host), pos);\n        }\n    }\n\n    void dropCircle(const Vec2&amp; pos) {\n        if (not shareGameData) return;\n        if (isHost()) {\n            shareGameData-&gt;playerDropCircle(getLocalPlayerID(), pos);\n            sendEvent(MultiplayerEvent(EventCode::playerDropCircle), getLocalPlayerID(), pos);\n        }\n        else {\n            if (auto badge = shareGameData-&gt;player(getLocalPlayerID()).pickedBadge()) {\n                dropBadgeLocalChange = badge-&gt;moveBy(pos);\n            }\n\n            //\u30db\u30b9\u30c8\u306b\u901a\u77e5\n            sendEvent(MultiplayerEvent(EventCode::dropCircle_toHost, EventReceiverOption::Host), pos);\n        }\n    }\n\nprivate:\n\n    //\u30a4\u30d9\u30f3\u30c8\u3092\u53d7\u4fe1\u3057\u305f\u3089\u305d\u308c\u306b\u5fdc\u3058\u305f\u51e6\u7406\u3092\u884c\u3046\n\n    void eventReceived_sendShareGameData(LocalPlayerID playerID, const ShareGameData&amp; data)\n    {\n        shareGameData = data;\n    }\n\n    void eventReceived_addPlayer(LocalPlayerID playerID, LocalPlayerID newPlayerID, const SharePlayerData&amp; data)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;players().emplace(newPlayerID, data);\n    }\n\n    void eventReceived_setPlayerPos(LocalPlayerID playerID, const Vec2&amp; pos)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;player(playerID).setPos(pos);\n    }\n\n    void eventReceived_pickCircle_toHost(LocalPlayerID playerID, const Vec2&amp; pos)\n    {\n        if (not shareGameData) return;\n        if (not isHost()) return;\n        shareGameData-&gt;playerPickCircle(playerID, pos);\n        sendEvent(MultiplayerEvent(EventCode::playerPickCircle), playerID, pos);\n    }\n\n    void eventReceived_dropCircle_toHost(LocalPlayerID playerID, const Vec2&amp; pos)\n    {\n        if (not shareGameData) return;\n        if (not isHost()) return;\n        shareGameData-&gt;playerDropCircle(playerID, pos);\n        sendEvent(MultiplayerEvent(EventCode::playerDropCircle), playerID, pos);\n    }\n\n    void eventReceived_playerPickCircle(LocalPlayerID hostID, LocalPlayerID pickerID, const Vec2&amp; pos)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;playerPickCircle(pickerID, pos);\n\n        if (pickerID == getLocalPlayerID()) {\n            pickBadgeLocalChange.reset();\n        }\n    }\n\n    void eventReceived_playerDropCircle(LocalPlayerID hostID, LocalPlayerID dropperID, const Vec2&amp; pos)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;playerDropCircle(dropperID, pos);\n\n        if (dropperID == getLocalPlayerID()) {\n            dropBadgeLocalChange.reset();\n        }\n    }\n\n    void eventReceived_erasePlayer(LocalPlayerID playerID, LocalPlayerID erasePlayerID)\n    {\n        if (not shareGameData) return;\n        shareGameData-&gt;players().erase(erasePlayerID);\n    }\n    \n    void joinRoomEventAction(const LocalPlayer&amp; newPlayer, const Array&lt;LocalPlayerID&gt;&amp; playerIDs, bool isSelf) override\n    {\n        if (isSelf) {\n            shareGameData.reset();\n        }\n\n        if (isSelf and isHost()) {\n            shareGameData = ShareGameData();\n\n            //\u81ea\u5206\u304c\u30db\u30b9\u30c8\u306e\u5834\u5408\u3001\u81ea\u5206\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\n            shareGameData-&gt;players().emplace(newPlayer.localID, SharePlayerData(Scene::Center(), RandomColorF()));\n        }\n\n\n        //\u8ab0\u304b\u304c\u90e8\u5c4b\u306b\u5165\u3063\u3066\u6765\u305f\u6642\u3001\u30db\u30b9\u30c8\u306f\u305d\u306e\u4eba\u306b\u30c7\u30fc\u30bf\u3092\u9001\u308b\n        if (not isSelf and isHost()) {\n            sendEvent(MultiplayerEvent(EventCode::sendShareGameData, { newPlayer.localID }), *shareGameData);\n\n            //\u65b0\u3057\u3044\u30d7\u30ec\u30a4\u30e4\u30fc\u30c7\u30fc\u30bf\u3092\u4f5c\u6210\u3057\u3001\u4ed6\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u9001\u4fe1\n            SharePlayerData newPlayerData(Scene::Center(), RandomColorF());\n            shareGameData-&gt;players().emplace(newPlayer.localID, newPlayerData);\n            sendEvent(MultiplayerEvent(EventCode::addPlayer), newPlayer.localID, newPlayerData);\n        }\n    }\n\n    void leaveRoomEventAction(LocalPlayerID playerID, bool isInactive) override\n    {\n        if (not shareGameData) return;\n\n        if (isHost()) {\n            \n            if (auto&amp; badge = shareGameData-&gt;player(playerID).pickedBadge()) {\n                const Vec2&amp; pos = shareGameData-&gt;player(playerID).pos();\n                shareGameData-&gt;playerDropCircle(playerID, pos);\n                sendEvent(MultiplayerEvent(EventCode::playerDropCircle), playerID, pos);\n            }\n\n            shareGameData-&gt;players().erase(playerID);\n            sendEvent(MultiplayerEvent(EventCode::erasePlayer), playerID);\n        }\n    }\n};\n\nvoid Main()\n{\n    MyClient client;\n    \n    while (System::Update())\n    {\n        if (client.isActive())\n        {\n            client.update();\n        }\n        else {\n            client.connect(U\"player\", U\"jp\");\n        }\n\n        if (client.isInLobby())\n        {\n            Scene::Rect().draw(Palette::Steelblue);\n\n            if (SimpleGUI::ButtonAt(U\"joinRandomOrCreateRoom\", Scene::Center(), 300))\n            {\n                client.joinRandomOrCreateRoom(U\"\");\n            }\n        }\n\n        if (client.isInRoom())\n        {\n            Scene::Rect().draw(Palette::Sienna);\n\n            if (client.shareGameData) {\n\n                {\n                    Vec2 prePos = client.shareGameData-&gt;player(client.getLocalPlayerID()).pos();\n                    Vec2 nextPos = Cursor::Pos();\n                    if (prePos != nextPos) {\n                        client.setPlayerPos(nextPos);\n                    }\n                }\n\n                if (MouseL.down()) {\n                    client.pickCircle(Cursor::Pos());\n                }\n\n                if (MouseL.up()) {\n                    client.dropCircle(Cursor::Pos());\n                }\n\n                for (auto [i,badge] : client.shareGameData-&gt;badges() | std::views::enumerate) {\n\n                    if (client.pickBadgeLocalChange and i == client.pickBadgeLocalChange-&gt;pickedBadgeIndex) {\n                        continue;\n                    }\n\n                    badge.circle.draw(badge.color);\n                }\n\n                if (auto badge = client.dropBadgeLocalChange) {\n                    badge-&gt;circle.draw(badge-&gt;color);\n                }\n\n                //\u30d7\u30ec\u30a4\u30e4\u30fc\u306e\u30c7\u30fc\u30bf\u3092\u8868\u793a\n                for (const auto&amp; [playerID, data] : client.shareGameData-&gt;players()) {\n                    if (auto&amp; badge = data.pickedBadge();badge and not client.dropBadgeLocalChange) {\n                        Circle circle = badge-&gt;circle.movedBy(data.pos() - Vec2(2, 2));\n                        circle.drawShadow(Vec2(5, 5), 10, 2.0, ColorF(0.0, 0.2)).draw(badge-&gt;color);\n                    }\n\n                    if (playerID == client.getLocalPlayerID()) {\n                        if (client.pickBadgeLocalChange) {\n                            Circle circle = client.pickBadgeLocalChange-&gt;badge.circle.movedBy(data.pos() - Vec2(2, 2));\n                            circle.drawShadow(Vec2(5, 5), 10, 2.0, ColorF(0.0, 0.2)).draw(client.pickBadgeLocalChange-&gt;badge.color);\n\n                        }\n                    }\n\n\n                    Circle(data.pos(), 3).draw(data.color());\n                }\n            }\n\n            if (SimpleGUI::Button(U\"LeaveRoom\", Vec2{ 20, 20 }, 160))\n            {\n                client.leaveRoom();\n            }\n        }\n\n        if (not client.isInLobby() and not client.isInRoom()) {\n            //\u30ed\u30fc\u30c7\u30a3\u30f3\u30b0\u753b\u9762\n            size_t t = Floor(fmod(Scene::Time() / 0.1, 8));\n            for (size_t i : step(8)) {\n                Vec2 n = Circular(1, i * Math::TwoPi / 8);\n                Line(Scene::Center() + n * 10, Arg::direction(n * 10)).draw(LineStyle::RoundCap, 4, t == i ? ColorF(1, 0.9) : ColorF(1, 0.5));\n            }\n        }\n    }\n}\n</code></pre>"},{"location":"targetGroup/","title":"\u30a4\u30d9\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7","text":"<p><code>MultiplayerEvent</code>\u306e\u7b2c\u4e8c\u5f15\u6570\u306b\u306f<code>EventReceiverOption</code>\u3001<code>Array&lt;LocalPlayerID&gt;</code>\u306e\u307b\u304b\u306b<code>TargetGroup</code>\u3092\u6307\u5b9a\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002<code>TargetGroup</code>\u306fuint8\u578b\u306e\u30e9\u30c3\u30d1\u30fc\u3067\u3042\u308a\u30011\u4ee5\u4e0a255\u4ee5\u4e0b\u306e\u6574\u6570\u3092\u4f7f\u7528\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002 \u30b3\u30f3\u30b9\u30c8\u30e9\u30af\u30bf\u306f<code>TargetGroup(uint8 targetGroup)</code>\u3067\u3059\u3002</p> <p>\u4f8b\u3048\u3070 <pre><code>sendEvent(MultiplayerEvent(1,TargetGroup(1)),String(U\"\u3053\u3093\u306b\u3061\u306f\uff01\"));\n</code></pre></p> <p>\u3068\u3059\u308b\u3053\u3068\u3067\u3001\u30b0\u30eb\u30fc\u30d7\uff11\u306b\u6240\u5c5e\u3059\u308b\u4ed6\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u306b\u30a4\u30d9\u30f3\u30c8\u3092\u9001\u4fe1\u3059\u308b\u3053\u3068\u304c\u51fa\u6765\u307e\u3059\u3002</p> <p>\u306a\u304a\u30010\u3092\u6307\u5b9a\u3059\u308b\u3068\u5168\u3066\u306e\u30d7\u30ec\u30a4\u30e4\u30fc\u304c\u5bfe\u8c61\u306b\u306a\u308a\u307e\u3059\u3002\u30d7\u30ec\u30a4\u30e4\u30fc\u306f\u30b0\u30eb\u30fc\u30d70\u306b\u306f\u3058\u3081\u304b\u3089\u5168\u54e1\u6240\u5c5e\u3057\u3066\u3044\u3066\u3001\u9000\u51fa\u3059\u308b\u3053\u3068\u306f\u3067\u304d\u307e\u305b\u3093\u3002</p>"},{"location":"targetGroup/#\u30b0\u30eb\u30fc\u30d7\u3078\u306e\u52a0\u5165\u9000\u51fa","title":"\u30b0\u30eb\u30fc\u30d7\u3078\u306e\u52a0\u5165\u30fb\u9000\u51fa","text":"<p><code>joinEventTargetGroup()</code>\u3001<code>leaveEventTargetGroup()</code>\u3092\u7528\u3044\u3066\u81ea\u8eab\u306e\u30a4\u30d9\u30f3\u30c8\u30bf\u30fc\u30b2\u30c3\u30c8\u30b0\u30eb\u30fc\u30d7\u3092\u7ba1\u7406\u3067\u304d\u307e\u3059\u3002<code>joinAllEventTargetGroups()</code>\u3092\u7528\u3044\u308b\u30681~255\u5168\u3066\u306e\u30b0\u30eb\u30fc\u30d7\u306b\u6240\u5c5e\u3067\u304d\u3001<code>leaveAllEventTargetGroups()</code>\u3067\u5168\u3066\u306e\u30b0\u30eb\u30fc\u30d7\u304b\u3089\u9000\u51fa\u3057\u307e\u3059\u3002</p>"},{"location":"verify_the_connection/","title":"\u52d5\u304b\u3057\u3066\u307f\u3088\u3046\uff01","text":""},{"location":"verify_the_connection/#\u7c21\u5358\u306a\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f5c\u6210","title":"\u7c21\u5358\u306a\u30c1\u30e3\u30c3\u30c8\u30eb\u30fc\u30e0\u3092\u4f5c\u6210","text":"\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9 <pre><code># include &lt;Siv3D.hpp&gt; // Siv3D v0.6.15\n# include \"Multiplayer_Photon.hpp\"\n# include \"PHOTON_APP_ID.SECRET\"\n\nclass MyClient : public Multiplayer_Photon\n{\npublic:\n    MyClient()\n        :Multiplayer_Photon(std::string(SIV3D_OBFUSCATE(PHOTON_APP_ID)),U\"1.0\",Verbose::Yes)\n    {}\nprivate:\n\n    //sendEvent\u306b\u3088\u3063\u3066\u9001\u3089\u308c\u3066\u304d\u305f\u30a4\u30d9\u30f3\u30c8\u306b\u53cd\u5fdc\u3057\u547c\u3070\u308c\u308b\u3002\n    void customEventAction(const LocalPlayerID playerID, const uint8 eventCode, Deserializer&lt;MemoryViewReader&gt;&amp; reader) override\n    {\n        if (eventCode == 1)\n        {\n            String text;\n            reader(text);\n            Print &lt;&lt; getUserName(playerID) &lt;&lt; U\":\" &lt;&lt; text;\n        }\n    }\n};\n\nvoid Main()\n{\n    Window::Resize(1280, 720);\n\n    MyClient client;\n\n    TextEditState playerName{ U\"siv3d-kun\" };\n\n    TextEditState sendText;\n\n    Font font(20);\n\n    while (System::Update())\n    {\n        if (client.isActive())\n        {\n            client.update();\n        }\n\n        ClientState state = client.getClientState();\n\n        Vec2 stateTextPos(1000, 5);\n\n        //\u30af\u30e9\u30a4\u30a2\u30f3\u30c8\u306f7\u3064\u306e\u72b6\u614b\u3092\u6301\u3064\n        switch (state)\n        {\n        case s3d::ClientState::Disconnected:\n            font(U\"Disconnected\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::ConnectingToLobby:\n            font(U\"ConnectingToLobby\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::InLobby:\n            Scene::Rect().draw(Palette::Steelblue);\n            font(U\"InLobby\").draw(stateTextPos);\n\n            //\u30ed\u30d3\u30fc\u5185\u306b\u5b58\u5728\u3059\u308b\u30eb\u30fc\u30e0\u3092\u5217\u6319\n            font(U\"Rooms\").draw(Vec2{ 650, 5 });\n            {\n                auto roomNameList = client.getRoomNameList();\n                double y = 0;\n                for (size_t i = 0; i &lt; roomNameList.size(); ++i)\n                {\n                    //\u30af\u30ea\u30c3\u30af\u3067\u5165\u5ba4\n                    if (SimpleGUI::Button(roomNameList[i], Vec2{ 650, (y += 40) }, 330, client.isInLobby()))\n                    {\n                        client.joinRoom(roomNameList[i]);\n                    }\n                }\n            }\n            break;\n        case s3d::ClientState::JoiningRoom:\n            font(U\"JoiningRoom\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::InRoom:\n            Scene::Rect().draw(Palette::Sienna);\n            font(U\"InRoom\").draw(stateTextPos);\n            font(U\"Room name : \", client.getCurrentRoomName()).draw(Arg::topRight(Scene::Width() - 20, Scene::Height() - 90));\n\n            SimpleGUI::TextBox(sendText, Vec2{ 20, Scene::Height()-50}, 1000, unspecified, client.isInRoom());\n\n            //\u30dc\u30bf\u30f3\u3092\u62bc\u3059\u304b\u30a8\u30f3\u30bf\u30fc\u30ad\u30fc\u3092\u62bc\u3059\u3068\u6587\u5b57\u5217\u3092\u9001\u4fe1\n            if (SimpleGUI::Button(U\"&gt;&gt;&gt;\", Vec2{ 1040, Scene::Height() - 50 }, 160, client.isInRoom()) or sendText.enterKey)\n            {\n                //\u30a4\u30d9\u30f3\u30c8\u30b3\u30fc\u30c91\u3067\u6587\u5b57\u5217\u3092\u9001\u4fe1\n                client.sendEvent(MultiplayerEvent(1), sendText.text);\n                Print &lt;&lt; U\"\u81ea\u5206\uff1a\" &lt;&lt; sendText.text;\n                sendText.clear();\n            }\n\n            break;\n        case s3d::ClientState::LeavingRoom:\n            font(U\"LeavingRoom\").draw(stateTextPos);\n            break;\n        case s3d::ClientState::Disconnecting:\n            font(U\"Disconnecting\").draw(stateTextPos);\n            break;\n        default:\n            break;\n        }\n\n\n        //\u30b3\u30f3\u30c8\u30ed\u30fc\u30eb\u30d1\u30cd\u30eb\n\n        double y = 0;\n        if (SimpleGUI::Button(U\"Disconnect\", Vec2(1000, y+=40), unspecified, client.isActive()))\n        {\n            client.disconnect();\n        }\n\n        SimpleGUI::TextBox(playerName, Vec2(1000, y += 40), 200, unspecified, state == ClientState::Disconnected);\n\n        if (SimpleGUI::Button(U\"Connect\", Vec2(1000, y+=40), unspecified, state == ClientState::Disconnected))\n        {\n            //\u540d\u524d\u3001\u30ea\u30fc\u30b8\u30e7\u30f3\u3092\u6307\u5b9a\u3057\u3066\u63a5\u7d9a\n            client.connect(playerName.text, U\"jp\");\n        }\n\n        if (SimpleGUI::Button(U\"Create Room\", Vec2{ 1000, (y += 40) }, 160, client.isInLobby()))\n        {\n            //\u90e8\u5c4b\u540d\u306f\u88ab\u3063\u3066\u306f\u3044\u3051\u306a\u3044\u306e\u3067\u30e9\u30f3\u30c0\u30e0\u306a\u6587\u5b57\u5217\u3092\u4ed8\u52a0\n            const RoomName roomName = (client.getUserName() + U\"'s room-\" + ToHex(RandomUint32()));\n\n            //\u30ed\u30d3\u30fc\u5185\u306b\u90e8\u5c4b\u3092\u4f5c\u6210\n            client.createRoom(roomName);\n        }\n\n        if (SimpleGUI::Button(U\"Leave Room\", Vec2{ 1000, (y += 40) }, 160, client.isInRoom()))\n        {\n            client.leaveRoom();\n        }\n\n        if (SimpleGUI::Button(U\"ClearPrint()\", Vec2{ 1000, (y += 40) }, 160))\n        {\n            ClearPrint();\n        }\n        \n    }\n}\n</code></pre> <p>\u4e0a\u8a18\u30b5\u30f3\u30d7\u30eb\u30b3\u30fc\u30c9\u3092\u8cbc\u308a\u4ed8\u3051\u3001\u5b9f\u884c\u3057\u3066\u307f\u307e\u3057\u3087\u3046\u3002<code>Connect</code>\u3092\u62bc\u3057\u3001\u5c11\u3057\u307e\u3063\u3066\u753b\u9762\u304c\u9752\u304f\u306a\u3063\u305f\u3089\u63a5\u7d9a\u6210\u529f\u3067\u3059\u3002\u305d\u306e\u5f8c<code>Create Room</code>\u3092\u62bc\u3059\u3068\u90e8\u5c4b\u3092\u4f5c\u6210\u3068\u540c\u6642\u306b\u5165\u5ba4\u3067\u304d\u3001\u753b\u9762\u304c\u8336\u8272\u304f\u306a\u3063\u305f\u3089\u90e8\u5c4b\u306b\u3044\u308b\u72b6\u614b\u3067\u3059\u3002\u753b\u9762\u4e0b\u306e\u30c6\u30ad\u30b9\u30c8\u30dc\u30c3\u30af\u30b9\u304b\u3089\u30c1\u30e3\u30c3\u30c8\u3092\u6253\u3066\u307e\u3059\u304c\u3001\u4eca\u306f\u4e00\u4eba\u3057\u304b\u3044\u306a\u3044\u305f\u3081\u610f\u5473\u306f\u306a\u3044\u3067\u3059\u3002</p>"},{"location":"verify_the_connection/#\u4e00\u4eba\u3067\u901a\u4fe1\u3092\u78ba\u8a8d\u3059\u308b","title":"\u4e00\u4eba\u3067\u901a\u4fe1\u3092\u78ba\u8a8d\u3059\u308b","text":"<p>\u4e00\u5ea6\u5b9f\u884cWindow\u3092\u9589\u3058\u3066\u3001\u30d7\u30ed\u30b8\u30a7\u30af\u30c8\u306eApp\u30d5\u30a9\u30eb\u30c0\u3092\u958b\u304d\u307e\u3059\u3002\u5148\u307b\u3069\u4f5c\u3063\u305f\u5b9f\u884c\u30d5\u30a1\u30a4\u30eb\uff08.exe\u30d5\u30a1\u30a4\u30eb\uff09\u3092\u8907\u6570\u56de\u30c0\u30d6\u30eb\u30af\u30ea\u30c3\u30af\u3057\u3066\u8d77\u52d5\u3059\u308c\u3070\u3001\u4e00\u53f0\u306e\u30d1\u30bd\u30b3\u30f3\u3067\u901a\u4fe1\u304c\u884c\u3048\u3066\u3044\u308b\u306e\u3092\u78ba\u8a8d\u3067\u304d\u307e\u3059\u3002</p> <p>\u4e00\u4eba\u76ee\u304c\u90e8\u5c4b\u3092\u4f5c\u6210\u3057\u305f\u3089\u3001\u4e8c\u4eba\u76ee\u306fRooms\u306e\u4e0b\u306b\u90e8\u5c4b\u306e\u540d\u524d\u3067\u5165\u5ba4\u30dc\u30bf\u30f3\u304c\u8868\u793a\u3055\u308c\u308b\u306f\u305a\u306a\u306e\u3067\u3001\u305d\u3053\u304b\u3089\u540c\u3058\u90e8\u5c4b\u306b\u5165\u308c\u307e\u3059\u3002</p> <p></p>"}]}